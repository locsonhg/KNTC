{"version":3,"file":"static/js/658.f3afde2f.chunk.js","mappings":"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","sources":["components/uielements/checkbox.js","components/uielements/styles/checkbox.style.js","components/utility/pageAction.style.js","components/utility/pageAction.js","customApp/CustomHook/useKey.js","customApp/containers/HeThong/DongBoDuLieu/config.js","customApp/containers/HeThong/DongBoDuLieu/danhsachdonthu.styled.js","customApp/containers/HeThong/DongBoDuLieu/danhsachdonthu.js","customApp/containers/HeThong/DongBoDuLieu/lichsudongbo.styled.js","customApp/containers/HeThong/DongBoDuLieu/lichsudongbo.js","customApp/containers/HeThong/DongBoDuLieu/Mappingdanhmuckntcquocgia.styled.js","customApp/containers/HeThong/DongBoDuLieu/Mappingdanhmuckntcquocgia.js","customApp/containers/HeThong/DongBoDuLieu/index.js"],"sourcesContent":["import { Checkbox } from 'antd';\nimport AntCheckbox from './styles/checkbox.style';\n\nconst checkbox = AntCheckbox(Checkbox);\nconst CheckboxGroup = Checkbox.Group;\n\nexport default checkbox;\nexport { CheckboxGroup };\n","import styled from \"styled-components\";\nimport { palette } from \"styled-theme\";\n\nconst AntCheckbox = ComponentName => styled(ComponentName)`\n  &.ant-checkbox-wrapper {\n    font-size: 13px;\n    color: ${palette(\"text\", 1)};\n\n    .ant-checkbox {\n      top: inherit;\n    }\n\n    .ant-checkbox-checked .ant-checkbox-inner,\n    .ant-checkbox-indeterminate .ant-checkbox-inner {\n      background-color: ${palette(\"primary\", 0)};\n      border-color: ${palette(\"primary\", 0)};\n    }\n\n    .ant-checkbox:hover .ant-checkbox-inner,\n    .ant-checkbox-input:focus + .ant-checkbox-inner {\n      border-color: ${palette(\"primary\", 0)};\n    }\n\n    &:hover {\n      .ant-checkbox-inner {\n        border-color: ${palette(\"primary\", 0)};\n      }\n    }\n  }\n`;\n\nexport default AntCheckbox;\n","import styled from 'styled-components';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentDivAction = styled.div`\r\n    text-align: right;\r\n    display: inline-block;\r\n    flex: 1;\r\n    padding: 0 3px 0 0;\r\n    @media only screen and (max-width: 1336px) {\r\n        text-align: left;\r\n        display: block;\r\n        flex: none;\r\n        width: 100%;\r\n        padding: 0 0 10px 0;\r\n    }\r\n    button {\r\n        margin-right: 0px;\r\n        margin-left: 10px;\r\n        @media only screen and (max-width: 1336px) {\r\n            margin-left: 0px;\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ComponentDivAction = WithDirection(WDComponentDivAction);\r\nexport { ComponentDivAction };\r\n","import React from 'react';\r\nimport { ComponentDivAction } from './pageAction.style';\r\n\r\nexport default props =>\r\n  <ComponentDivAction>\r\n      {props.children}\r\n  </ComponentDivAction>;\r\n","import {useEffect, useState} from \"react\";\r\n\r\nfunction useKey(props) {\r\n  const [modalKey, setModalKey] = useState(0);\r\n  const increaseKey = () => {\r\n    setModalKey(modalKey + 1);\r\n  };\r\n  return [modalKey, increaseKey];\r\n}\r\n\r\nexport {useKey};","import Axios from \"axios\";\nimport { apiGetAuth, apiPostAuth } from \"../../../../api\";\nimport { getDefaultPageSize } from \"../../../../helpers/utility\";\nimport server from \"../../../../settings\";\n\nconst apiUrl = {\n  getDantoc: server.v2Url + \"DanhMucDanToc/DanhSachDanToc\",\n  getDetailDantoc: server.v2Url + \"DanhMucDanToc/ChiTietDanToc\",\n  postDantoc: server.v2Url + \"DanhMucDanToc/ThemMoiDanToc\",\n  updateDantoc: server.v2Url + \"DanhMucDanToc/CapNhatDanToc\",\n  deleteDantoc: server.v2Url + \"DanhMucDanToc/XoaDanToc\",\n};\n// lay danh sach\nconst api = {\n  DanhSachDanToc: (param) => {\n    return apiGetAuth(apiUrl.getDantoc, {\n      ...param,\n      PageNumber: param.PageNumber ? param.PageNumber : 1,\n      PageSize: param.PageSize ? param.PageSize : getDefaultPageSize(),\n    });\n  },\n  ChiTietDanToc: (param) => {\n    return apiGetAuth(apiUrl.getDetailDantoc, {\n      ...param,\n    });\n  },\n\n  ThemDanToc: (param) => {\n    return apiPostAuth(apiUrl.postDantoc, {\n      ...param,\n    });\n  },\n\n  SuaDanToc: (param) => {\n    return apiPostAuth(apiUrl.updateDantoc, {\n      ...param,\n    });\n  },\n\n  XoaDanToc: (param) => {\n    return apiPostAuth(apiUrl.deleteDantoc, param);\n  },\n};\n\nexport default api;\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    .filter-item {\r\n        display: flex;\r\n        align-items: center;\r\n        .label {\r\n            margin-right : 10px;\r\n            flex-basis: 15%;\r\n        }\r\n        .label-time {\r\n            margin-right : 10px;\r\n            flex-basis: 10%;\r\n        }\r\n        .input {\r\n            display: flex;\r\n            align-items: center;\r\n            flex-basis: content;\r\n        }\r\n        .ant-checkbox-group {\r\n            display: flex;\r\n            align-items : center;\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport default Wrapper","import { Modal, Table, Tooltip, message,Row,Col,Form,Input,Radio   } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../../redux/DanhMuc/DanhMucDanToc/action\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport PageAction from \"../../../../components/utility/pageAction\";\r\nimport Box from \"../../../../components/utility/box\";\r\nimport BoxFilter from \"../../../../components/utility/boxFilter\";\r\nimport BoxTable from \"../../../../components/utility/boxTable\";\r\nimport Checkbox from \"../../../../components/uielements/checkbox\";\r\nimport {\r\n  Button,\r\n  InputSearch,\r\n} from \"../../../../components/uielements/exportComponent\";\r\nimport {\r\n  changeUrlFilter,\r\n  getDefaultPageSize,\r\n  getFilterData,\r\n  getRoleByKey,\r\n} from \"../../../../helpers/utility\";\r\nimport { useKey } from \"../../../CustomHook/useKey\";\r\nimport queryString from \"query-string\";\r\nimport api from \"./config\";\r\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { CheckboxGroup } from \"../../../../components/uielements/checkbox\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ITEM_LAYOUT } from \"../../../../settings/constants\";\r\nimport Wrapper from './danhsachdonthu.styled'\r\nconst { Item } = Form;\r\nconst DanhSachDonThu = (props) => {\r\n  document.title = \"Danh Mục Dân Tộc\";\r\n  const {form} = useForm()\r\n  const {filterData,setFilterData} = props\r\n  const [dataModalAddEdit, setDataModalAddEdit] = useState({});\r\n  const [visibleModalAddEdit, setVisibleModalAddEdit] = useState(false);\r\n  const [action, setAction] = useState(\"\");\r\n  const [modalKey, inceaseModalKey] = useKey();\r\n  const [selectedRowsKey, setSelectedRowsKey] = useState([]);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [loaiDongBo,setLoaiDongBo] = useState(1)\r\n\r\n  useEffect(() => {\r\n    changeUrlFilter(filterData);\r\n    props.getData(filterData);\r\n  }, [filterData]);\r\n\r\n  useEffect(() => {\r\n    props.getData(filterData);\r\n  }, []);\r\n\r\n  const onTableChange = (pagination, filters, sorter) => {\r\n    let oldFilterData = filterData;\r\n    let onOrder = { pagination, filters, sorter };\r\n    let newFilterData = getFilterData(oldFilterData, null, onOrder);\r\n\r\n    setFilterData(newFilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const onFilter = (value, property) => {\r\n    let oldFilterData = filterData;\r\n    let onFilter = { value, property };\r\n    let newfilterData = getFilterData(oldFilterData, onFilter, null);\r\n    //get filter data\r\n    setFilterData(newfilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const showModalAdd = () => {\r\n    setAction(\"add\");\r\n    setDataModalAddEdit({});\r\n    inceaseModalKey();\r\n    setVisibleModalAddEdit(true);\r\n  };\r\n\r\n  const deleteModalAddEdit = (DanTocID) => {\r\n    Modal.confirm({\r\n      title: \"Xóa Dữ Liệu\",\r\n      content: \"Bạn có muốn xóa dân tộc này không?\",\r\n      cancelText: \"Không\",\r\n      okText: \"Có\",\r\n      onOk: () => {\r\n        setConfirmLoading(true);\r\n        api\r\n          .XoaDanToc(DanTocID)\r\n          .then((res) => {\r\n            if (res.data.Status > 0) {\r\n              setConfirmLoading(false);\r\n              props.getData(filterData);\r\n              message.destroy();\r\n              message.success(res.data.Message);\r\n            } else {\r\n              message.destroy();\r\n              message.error(res.data.Message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            message.destroy();\r\n            message.error(error.toString());\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const showModalEdit = (id) => {\r\n    const DanTocID = id;\r\n    setAction(\"edit\");\r\n    api\r\n      .ChiTietDanToc({ DanTocID })\r\n      .then((res) => {\r\n        if (res.data.Status > 0) {\r\n          setDataModalAddEdit(res.data.Data);\r\n          inceaseModalKey();\r\n          setVisibleModalAddEdit(true);\r\n        } else {\r\n          message.destroy();\r\n          message.error(res.data.Message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.destroy();\r\n        message.error(error.toString());\r\n      });\r\n  };\r\n\r\n  const hideModalAddEdit = () => {\r\n    setAction(\"\");\r\n    setSelectedRowsKey([]);\r\n    setDataModalAddEdit({});\r\n    setVisibleModalAddEdit(false);\r\n  };\r\n\r\n  const submitModalAddEdit = (data) => {\r\n    console.log(\"true\");\r\n    setConfirmLoading(true);\r\n    if (action === \"add\") {\r\n      api\r\n        .ThemDanToc(data)\r\n        .then((res) => {\r\n          setConfirmLoading(false);\r\n          if (res.data.Status > 0) {\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n    if (action === \"edit\") {\r\n      api\r\n        .SuaDanToc(data)\r\n        .then((res) => {\r\n          if (res.data.Status > 0) {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderThaoTac = (record) => {\r\n    return (\r\n      <div className={\"action-btn\"}>\r\n        {/* {role.edit ? */}\r\n        <Tooltip title={\"Sửa\"}>\r\n          <EditOutlined onClick={() => showModalEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n        {/* {role.delete ? */}\r\n        <Tooltip title={\"Xóa\"}>\r\n          <DeleteOutlined onClick={() => deleteModalAddEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const { DanhSachDanToc, TotalRow, role } = props;\r\n  const PageNumber = filterData.PageNumber\r\n    ? parseInt(filterData.PageNumber)\r\n    : 1;\r\n  const PageSize = filterData.PageSize\r\n    ? parseInt(filterData.PageSize)\r\n    : getDefaultPageSize();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n    //   width: 5,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{(PageNumber - 1) * PageSize + (index + 1)}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mã đơn thư\",\r\n      dataIndex: \"MaDonThu\",\r\n      align: \"left\",\r\n    //   width: 20,\r\n    },\r\n    {\r\n      title: \"Tên dân tộc\",\r\n      dataIndex: \"TenDanToc\",\r\n      align: \"left\",\r\n    //   width: 35,\r\n    },\r\n    {\r\n      title: \"Ngày nhập đơn\",\r\n      dataIndex: \"NgayNhapDon\",\r\n      align: \"left\",\r\n    //   width: 40,\r\n    },\r\n    {\r\n      title: \"Tên chủ đơn\",\r\n      dataIndex: \"TenChuDon\",\r\n      align: \"center\",\r\n    //   width: 30,\r\n    //   render: (text, record) => {\r\n    //     return <Checkbox checked={record.TrangThai}></Checkbox>;\r\n    //   },\r\n    },\r\n    {\r\n        title: \"Nội dung\",\r\n        dataIndex: \"NoiDung\",\r\n        align: \"left\",\r\n      //   width: 40,\r\n    },\r\n    {\r\n        title: \"Loại đơn\",\r\n        dataIndex: \"LoaiDon\",\r\n        align: \"left\",\r\n      //   width: 40,\r\n    },\r\n    {\r\n        title: \"Hướng xử lý\",\r\n    //   width: \"15%\",\r\n        dataIndex: \"HuongXuLy\",\r\n        align: \"center\",\r\n        margin: \"15px\",\r\n    //   render: (text, record) => renderThaoTac(record),\r\n    },\r\n  ];\r\n\r\n  const onChangeNgay = value => {\r\n    console.log(value,'value')\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys} selectedRowKeys`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n        disabled: record.name === '123122001', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n  };\r\n\r\n\r\n  const columnsTest = [\r\n    {\r\n      title: 'MaDanToc',\r\n      dataIndex: 'MaDanToc',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'TenDanToc',\r\n      dataIndex: 'TenDanToc',\r\n    },\r\n    {\r\n      title: 'GhiChu',\r\n      dataIndex: 'GhiChu',\r\n    },\r\n    {\r\n        title: 'TrangThai',\r\n        dataIndex: 'TrangThai',\r\n    },\r\n  ];\r\n  \r\n  const dataTest = [\r\n    {\r\n\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key : '123',\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 000000000000000000',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n      },\r\n    {\r\n\r\n      name: 'Disabled User',\r\n      age: 99,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 ',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n      },\r\n  ];\r\n\r\n  return (\r\n    // <Wrapper>\r\n\r\n    //     <LayoutWrapper>\r\n        <Wrapper>\r\n            <BoxFilter>\r\n                <Row gutter={[12,12]}>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Đường dẫn:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Mật khẩu:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Loại đồng bộ:</div>\r\n                            <div className={'input'}>\r\n                            <Radio.Group defaultValue={loaiDongBo} onChange = {e => setLoaiDongBo(e.target.value)}>\r\n                                <Radio value={1}>Theo Giờ</Radio>\r\n                                <Radio value={2}>Theo Ngày Trong Tuần</Radio>\r\n                            </Radio.Group>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Giờ đồng bộ:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    {loaiDongBo === 2 ? \r\n                        <Col xs = {24} md={12}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label-time'}>Từ ngày : </div>\r\n                            <div className={'input'}>\r\n                                <CheckboxGroup onChange={onChangeNgay}>\r\n                                    <Checkbox key = {1} value = {1}>Thứ 2</Checkbox>\r\n                                    <Checkbox key = {2} value = {2}>Thứ 3</Checkbox>\r\n                                    <Checkbox key = {3} value = {3}>Thứ 4</Checkbox>\r\n                                    <Checkbox key = {4} value = {4}>Thứ 5</Checkbox>\r\n                                    <Checkbox key = {5} value = {5}>Thứ 6</Checkbox>\r\n                                    <Checkbox key = {6} value = {6}>Thứ 7</Checkbox>\r\n                                    <Checkbox key = {7} value = {7}>Chủ nhật</Checkbox>\r\n                                </CheckboxGroup>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                        : null\r\n                    }\r\n                </Row>\r\n            </BoxFilter>\r\n            <BoxTable\r\n            columns={columns}\r\n            rowSelection={{\r\n                ...rowSelection,\r\n            }}\r\n            dataSource={dataTest}\r\n            onChange={onTableChange}\r\n            pagination={{\r\n                showSizeChanger: true,\r\n                showTotal: (total, range) =>\r\n                `Từ ${range[0]} đến ${range[1]} trên ${total} kết quả`,\r\n                total: TotalRow,\r\n                current: PageNumber,\r\n                pageSize: PageSize,\r\n            }}\r\n            />\r\n        </Wrapper>\r\n\r\n    //     </LayoutWrapper>\r\n    // </Wrapper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.ReducerDanToc,\r\n    role: getRoleByKey(state.Auth.role, \"quan-ly-nam-hoc\"),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(DanhSachDonThu);\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    .filter-item {\r\n        display: flex;\r\n        align-items: center;\r\n        .label {\r\n            margin-right : 10px;\r\n            /* flex-basis: 30%; */\r\n        }\r\n        .input {\r\n            flex-basis: content;\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport default Wrapper","import { Modal, Table, Tooltip, message,Row,Col,Form,Input,Radio   } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../../redux/DanhMuc/DanhMucDanToc/action\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport PageAction from \"../../../../components/utility/pageAction\";\r\nimport Box from \"../../../../components/utility/box\";\r\nimport BoxFilter from \"../../../../components/utility/boxFilter\";\r\nimport BoxTable from \"../../../../components/utility/boxTable\";\r\nimport Checkbox from \"../../../../components/uielements/checkbox\";\r\nimport {\r\n  Button,\r\n  InputSearch,\r\n} from \"../../../../components/uielements/exportComponent\";\r\nimport {\r\n  changeUrlFilter,\r\n  getDefaultPageSize,\r\n  getFilterData,\r\n  getRoleByKey,\r\n} from \"../../../../helpers/utility\";\r\nimport { useKey } from \"../../../CustomHook/useKey\";\r\nimport queryString from \"query-string\";\r\nimport api from \"./config\";\r\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { CheckboxGroup } from \"../../../../components/uielements/checkbox\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ITEM_LAYOUT } from \"../../../../settings/constants\";\r\nimport Wrapper from './lichsudongbo.styled'\r\nconst { Item } = Form;\r\nconst LichSuDongBo = (props) => {\r\n  document.title = \"Danh Mục Dân Tộc\";\r\n  const {form} = useForm()\r\n  const {filterData,setFilterData} = props\r\n  const [dataModalAddEdit, setDataModalAddEdit] = useState({});\r\n  const [visibleModalAddEdit, setVisibleModalAddEdit] = useState(false);\r\n  const [action, setAction] = useState(\"\");\r\n  const [modalKey, inceaseModalKey] = useKey();\r\n  const [selectedRowsKey, setSelectedRowsKey] = useState([]);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [loaiDongBo,setLoaiDongBo] = useState(1)\r\n\r\n  useEffect(() => {\r\n    changeUrlFilter(filterData);\r\n    props.getData(filterData);\r\n  }, [filterData]);\r\n\r\n  useEffect(() => {\r\n    props.getData(filterData);\r\n  }, []);\r\n\r\n  const onTableChange = (pagination, filters, sorter) => {\r\n    let oldFilterData = filterData;\r\n    let onOrder = { pagination, filters, sorter };\r\n    let newFilterData = getFilterData(oldFilterData, null, onOrder);\r\n\r\n    setFilterData(newFilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const onFilter = (value, property) => {\r\n    let oldFilterData = filterData;\r\n    let onFilter = { value, property };\r\n    let newfilterData = getFilterData(oldFilterData, onFilter, null);\r\n    //get filter data\r\n    setFilterData(newfilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const showModalAdd = () => {\r\n    setAction(\"add\");\r\n    setDataModalAddEdit({});\r\n    inceaseModalKey();\r\n    setVisibleModalAddEdit(true);\r\n  };\r\n\r\n  const deleteModalAddEdit = (DanTocID) => {\r\n    Modal.confirm({\r\n      title: \"Xóa Dữ Liệu\",\r\n      content: \"Bạn có muốn xóa dân tộc này không?\",\r\n      cancelText: \"Không\",\r\n      okText: \"Có\",\r\n      onOk: () => {\r\n        setConfirmLoading(true);\r\n        api\r\n          .XoaDanToc(DanTocID)\r\n          .then((res) => {\r\n            if (res.data.Status > 0) {\r\n              setConfirmLoading(false);\r\n              props.getData(filterData);\r\n              message.destroy();\r\n              message.success(res.data.Message);\r\n            } else {\r\n              message.destroy();\r\n              message.error(res.data.Message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            message.destroy();\r\n            message.error(error.toString());\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const showModalEdit = (id) => {\r\n    const DanTocID = id;\r\n    setAction(\"edit\");\r\n    api\r\n      .ChiTietDanToc({ DanTocID })\r\n      .then((res) => {\r\n        if (res.data.Status > 0) {\r\n          setDataModalAddEdit(res.data.Data);\r\n          inceaseModalKey();\r\n          setVisibleModalAddEdit(true);\r\n        } else {\r\n          message.destroy();\r\n          message.error(res.data.Message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.destroy();\r\n        message.error(error.toString());\r\n      });\r\n  };\r\n\r\n  const hideModalAddEdit = () => {\r\n    setAction(\"\");\r\n    setSelectedRowsKey([]);\r\n    setDataModalAddEdit({});\r\n    setVisibleModalAddEdit(false);\r\n  };\r\n\r\n  const submitModalAddEdit = (data) => {\r\n    console.log(\"true\");\r\n    setConfirmLoading(true);\r\n    if (action === \"add\") {\r\n      api\r\n        .ThemDanToc(data)\r\n        .then((res) => {\r\n          setConfirmLoading(false);\r\n          if (res.data.Status > 0) {\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n    if (action === \"edit\") {\r\n      api\r\n        .SuaDanToc(data)\r\n        .then((res) => {\r\n          if (res.data.Status > 0) {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderThaoTac = (record) => {\r\n    return (\r\n      <div className={\"action-btn\"}>\r\n        {/* {role.edit ? */}\r\n        <Tooltip title={\"Sửa\"}>\r\n          <EditOutlined onClick={() => showModalEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n        {/* {role.delete ? */}\r\n        <Tooltip title={\"Xóa\"}>\r\n          <DeleteOutlined onClick={() => deleteModalAddEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const { DanhSachDanToc, TotalRow, role } = props;\r\n  const PageNumber = filterData.PageNumber\r\n    ? parseInt(filterData.PageNumber)\r\n    : 1;\r\n  const PageSize = filterData.PageSize\r\n    ? parseInt(filterData.PageSize)\r\n    : getDefaultPageSize();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n    //   width: 5,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{(PageNumber - 1) * PageSize + (index + 1)}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mã đơn thư\",\r\n      dataIndex: \"MaDonThu\",\r\n      align: \"left\",\r\n    //   width: 20,\r\n    },\r\n    {\r\n      title: \"Tên dân tộc\",\r\n      dataIndex: \"TenDanToc\",\r\n      align: \"left\",\r\n    //   width: 35,\r\n    },\r\n    {\r\n      title: \"Ngày nhập đơn\",\r\n      dataIndex: \"NgayNhapDon\",\r\n      align: \"left\",\r\n    //   width: 40,\r\n    },\r\n    {\r\n      title: \"Tên chủ đơn\",\r\n      dataIndex: \"TenChuDon\",\r\n      align: \"center\",\r\n    //   width: 30,\r\n    //   render: (text, record) => {\r\n    //     return <Checkbox checked={record.TrangThai}></Checkbox>;\r\n    //   },\r\n    },\r\n    {\r\n        title: \"Nội dung\",\r\n        dataIndex: \"NoiDung\",\r\n        align: \"left\",\r\n      //   width: 40,\r\n    },\r\n    {\r\n        title: \"Loại đơn\",\r\n        dataIndex: \"LoaiDon\",\r\n        align: \"left\",\r\n      //   width: 40,\r\n    },\r\n    {\r\n        title: \"Hướng xử lý\",\r\n    //   width: \"15%\",\r\n        dataIndex: \"HuongXuLy\",\r\n        align: \"center\",\r\n        margin: \"15px\",\r\n    //   render: (text, record) => renderThaoTac(record),\r\n    },\r\n  ];\r\n\r\n  const onChangeNgay = value => {\r\n    console.log(value,'value')\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys} selectedRowKeys`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n        disabled: record.name === '123122001', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n  };\r\n\r\n\r\n  const columnsTest = [\r\n    {\r\n      title: 'MaDanToc',\r\n      dataIndex: 'MaDanToc',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'TenDanToc',\r\n      dataIndex: 'TenDanToc',\r\n    },\r\n    {\r\n      title: 'GhiChu',\r\n      dataIndex: 'GhiChu',\r\n    },\r\n    {\r\n        title: 'TrangThai',\r\n        dataIndex: 'TrangThai',\r\n    },\r\n  ];\r\n  \r\n  const dataTest = [\r\n    {\r\n\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key : '123',\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 000000000000000000',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n      },\r\n    {\r\n\r\n      name: 'Disabled User',\r\n      age: 99,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 ',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n      },\r\n  ];\r\n\r\n  return (\r\n    <Wrapper>\r\n\r\n        <LayoutWrapper>\r\n        <Box>\r\n            {/* <BoxFilter>\r\n                <Row gutter={[12,12]}>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Đường dẫn:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Mật khẩu:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Loại đồng bộ:</div>\r\n                            <div className={'input'}>\r\n                            <Radio.Group defaultValue={loaiDongBo} onChange = {e => setLoaiDongBo(e.target.value)}>\r\n                                <Radio value={1}>Theo Giờ</Radio>\r\n                                <Radio value={2}>Theo Ngày Trong Tuần</Radio>\r\n                            </Radio.Group>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs = {24} md={9}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Giờ đồng bộ:</div>\r\n                            <div className={'input'}>\r\n                                <Input/>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    {loaiDongBo === 2 ? \r\n                        <Col xs = {24} md={12}>\r\n                        <div className={'filter-item'}>\r\n                            <div className={'label'}>Từ ngày:</div>\r\n                            <div className={'input'}>\r\n                                <CheckboxGroup onChange={onChangeNgay}>\r\n                                    <Checkbox key = {1} value = {1}>Thứ 2</Checkbox>\r\n                                    <Checkbox key = {2} value = {2}>Thứ 3</Checkbox>\r\n                                    <Checkbox key = {3} value = {3}>Thứ 4</Checkbox>\r\n                                    <Checkbox key = {4} value = {4}>Thứ 5</Checkbox>\r\n                                    <Checkbox key = {5} value = {5}>Thứ 6</Checkbox>\r\n                                    <Checkbox key = {6} value = {6}>Thứ 7</Checkbox>\r\n                                    <Checkbox key = {7} value = {7}>Chủ nhật</Checkbox>\r\n                                </CheckboxGroup>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                        : null\r\n                    }\r\n                </Row>\r\n            </BoxFilter> */}\r\n            <BoxTable\r\n            columns={columns}\r\n            dataSource={dataTest}\r\n            onChange={onTableChange}\r\n            pagination={{\r\n                showSizeChanger: true,\r\n                showTotal: (total, range) =>\r\n                `Từ ${range[0]} đến ${range[1]} trên ${total} kết quả`,\r\n                total: TotalRow,\r\n                current: PageNumber,\r\n                pageSize: PageSize,\r\n            }}\r\n            />\r\n        </Box>\r\n\r\n        </LayoutWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.ReducerDanToc,\r\n    role: getRoleByKey(state.Auth.role, \"quan-ly-nam-hoc\"),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(LichSuDongBo);\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    .filter-item {\r\n        display: flex;\r\n        align-items: center;\r\n        .label {\r\n            margin-right : 10px;\r\n            /* flex-basis: 30%; */\r\n        }\r\n        .input {\r\n            flex-basis: content;\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nexport default Wrapper","import { Modal, Table, Tooltip, message,Row,Col,Form,Input,Radio   } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../../redux/DanhMuc/DanhMucDanToc/action\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport PageAction from \"../../../../components/utility/pageAction\";\r\nimport Box from \"../../../../components/utility/box\";\r\nimport BoxFilter from \"../../../../components/utility/boxFilter\";\r\nimport BoxTable from \"../../../../components/utility/boxTable\";\r\nimport Checkbox from \"../../../../components/uielements/checkbox\";\r\nimport {\r\n  Button,\r\n  InputSearch,\r\n  Option,\r\n  Select,\r\n} from \"../../../../components/uielements/exportComponent\";\r\nimport {\r\n  changeUrlFilter,\r\n  getDefaultPageSize,\r\n  getFilterData,\r\n  getRoleByKey,\r\n} from \"../../../../helpers/utility\";\r\nimport { useKey } from \"../../../CustomHook/useKey\";\r\nimport queryString from \"query-string\";\r\nimport api from \"./config\";\r\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { CheckboxGroup } from \"../../../../components/uielements/checkbox\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ITEM_LAYOUT } from \"../../../../settings/constants\";\r\nimport Wrapper from './Mappingdanhmuckntcquocgia.styled'\r\nconst { Item } = Form;\r\nconst LichSuDongBo = (props) => {\r\n  document.title = \"Danh Mục Dân Tộc\";\r\n  const {form} = useForm()\r\n  const {filterData,setFilterData} = props\r\n  const [dataModalAddEdit, setDataModalAddEdit] = useState({});\r\n  const [visibleModalAddEdit, setVisibleModalAddEdit] = useState(false);\r\n  const [action, setAction] = useState(\"\");\r\n  const [modalKey, inceaseModalKey] = useKey();\r\n  const [selectedRowsKey, setSelectedRowsKey] = useState([]);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [loaiDongBo,setLoaiDongBo] = useState(1)\r\n\r\n  useEffect(() => {\r\n    changeUrlFilter(filterData);\r\n    props.getData(filterData);\r\n  }, [filterData]);\r\n\r\n  useEffect(() => {\r\n    props.getData(filterData);\r\n  }, []);\r\n\r\n  const onTableChange = (pagination, filters, sorter) => {\r\n    let oldFilterData = filterData;\r\n    let onOrder = { pagination, filters, sorter };\r\n    let newFilterData = getFilterData(oldFilterData, null, onOrder);\r\n\r\n    setFilterData(newFilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const onFilter = (value, property) => {\r\n    let oldFilterData = filterData;\r\n    let onFilter = { value, property };\r\n    let newfilterData = getFilterData(oldFilterData, onFilter, null);\r\n    //get filter data\r\n    setFilterData(newfilterData);\r\n    setSelectedRowsKey([]);\r\n  };\r\n\r\n  const showModalAdd = () => {\r\n    setAction(\"add\");\r\n    setDataModalAddEdit({});\r\n    inceaseModalKey();\r\n    setVisibleModalAddEdit(true);\r\n  };\r\n\r\n  const deleteModalAddEdit = (DanTocID) => {\r\n    Modal.confirm({\r\n      title: \"Xóa Dữ Liệu\",\r\n      content: \"Bạn có muốn xóa dân tộc này không?\",\r\n      cancelText: \"Không\",\r\n      okText: \"Có\",\r\n      onOk: () => {\r\n        setConfirmLoading(true);\r\n        api\r\n          .XoaDanToc(DanTocID)\r\n          .then((res) => {\r\n            if (res.data.Status > 0) {\r\n              setConfirmLoading(false);\r\n              props.getData(filterData);\r\n              message.destroy();\r\n              message.success(res.data.Message);\r\n            } else {\r\n              message.destroy();\r\n              message.error(res.data.Message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            message.destroy();\r\n            message.error(error.toString());\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const showModalEdit = (id) => {\r\n    const DanTocID = id;\r\n    setAction(\"edit\");\r\n    api\r\n      .ChiTietDanToc({ DanTocID })\r\n      .then((res) => {\r\n        if (res.data.Status > 0) {\r\n          setDataModalAddEdit(res.data.Data);\r\n          inceaseModalKey();\r\n          setVisibleModalAddEdit(true);\r\n        } else {\r\n          message.destroy();\r\n          message.error(res.data.Message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.destroy();\r\n        message.error(error.toString());\r\n      });\r\n  };\r\n\r\n  const hideModalAddEdit = () => {\r\n    setAction(\"\");\r\n    setSelectedRowsKey([]);\r\n    setDataModalAddEdit({});\r\n    setVisibleModalAddEdit(false);\r\n  };\r\n\r\n  const submitModalAddEdit = (data) => {\r\n    console.log(\"true\");\r\n    setConfirmLoading(true);\r\n    if (action === \"add\") {\r\n      api\r\n        .ThemDanToc(data)\r\n        .then((res) => {\r\n          setConfirmLoading(false);\r\n          if (res.data.Status > 0) {\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n    if (action === \"edit\") {\r\n      api\r\n        .SuaDanToc(data)\r\n        .then((res) => {\r\n          if (res.data.Status > 0) {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderThaoTac = (record) => {\r\n    return (\r\n      <div className={\"action-btn\"}>\r\n        {/* {role.edit ? */}\r\n        <Tooltip title={\"Sửa\"}>\r\n          <EditOutlined onClick={() => showModalEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n        {/* {role.delete ? */}\r\n        <Tooltip title={\"Xóa\"}>\r\n          <DeleteOutlined onClick={() => deleteModalAddEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const { DanhSachDanToc, TotalRow, role } = props;\r\n  const PageNumber = filterData.PageNumber\r\n    ? parseInt(filterData.PageNumber)\r\n    : 1;\r\n  const PageSize = filterData.PageSize\r\n    ? parseInt(filterData.PageSize)\r\n    : getDefaultPageSize();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n    //   width: 5,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{(PageNumber - 1) * PageSize + (index + 1)}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mã trên KNTC\",\r\n      dataIndex: \"MaKNTC\",\r\n      align: \"left\",\r\n    //   width: 20,\r\n    },\r\n    {\r\n      title: \"Tên trên KNTC\",\r\n      dataIndex: \"TenKNTC\",\r\n      align: \"left\",\r\n    //   width: 35,\r\n    },\r\n    {\r\n      title: \"Mã mapping\",\r\n      dataIndex: \"MaMapping\",\r\n      align: \"left\",\r\n    //   width: 40,\r\n    },\r\n  ];\r\n\r\n  const onChangeNgay = value => {\r\n    console.log(value,'value')\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys} selectedRowKeys`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n        disabled: record.name === '123122001', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n  };\r\n\r\n\r\n  const columnsTest = [\r\n    {\r\n        title: \"STT\",\r\n        // width: 30,\r\n        align: \"center\",\r\n        render: (text, record, index) => (\r\n          <span>{(PageNumber - 1) * PageSize + (index + 1)}</span>\r\n        ),\r\n      },\r\n    {\r\n      title: 'Mã trên API',\r\n      dataIndex: 'MaAPI',\r\n    },\r\n    {\r\n      title: 'Tên trên API',\r\n      dataIndex: 'TenAPI',\r\n    },\r\n\r\n  ];\r\n  \r\n  const dataTest = [\r\n    {\r\n\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key : '123',\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 000000000000000000',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n      name: 'Disabled User',\r\n      age: 99,\r\n      address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n\r\n        name: 'Disabled User 12312312312 123 1231 13 212 123 ',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n\r\n        <LayoutWrapper>\r\n        <Box>\r\n           \r\n            <Row>\r\n                <Col xs = {24} md={16}>\r\n                    <BoxFilter>\r\n                      <div className=\"filter-item\">\r\n                        <p className=\"label\">Loại danh mục ánh xạ : </p>\r\n                        <Select style = {{width : '300px'}}>\r\n                          <Option>123</Option>\r\n                          <Option>123</Option>\r\n                          <Option>123</Option>\r\n                        </Select>\r\n                      </div>\r\n                    </BoxFilter>\r\n                    <BoxTable\r\n                    columns={columns}\r\n                    dataSource={dataTest}\r\n                    onChange={onTableChange}\r\n                    pagination={{\r\n                        showSizeChanger: true,\r\n                        showTotal: (total, range) =>\r\n                        `Từ ${range[0]} đến ${range[1]} trên ${total} kết quả`,\r\n                        total: TotalRow,\r\n                        current: PageNumber,\r\n                        pageSize: PageSize,\r\n                    }}\r\n                    />\r\n                </Col>\r\n                <Col xs = {24} md={8}>\r\n                    <BoxFilter>\r\n                      <Button>Tất cả dữ liệu & call api</Button>\r\n                      <Button style = {{marginLeft : '10px'}}>Cập nhật dữ liệu mapping</Button>\r\n                    </BoxFilter>\r\n                    <BoxTable\r\n                    columns={columnsTest}\r\n                    dataSource={dataTest}\r\n                    onChange={onTableChange}\r\n                    scroll = {{\r\n                      x : 400\r\n                    }}\r\n                    pagination={{\r\n                        showSizeChanger: true,\r\n                        showTotal: (total, range) =>\r\n                        `Từ ${range[0]} đến ${range[1]} trên ${total} kết quả`,\r\n                        total: TotalRow,\r\n                        current: PageNumber,\r\n                        pageSize: PageSize,\r\n                    }}\r\n                    />\r\n                </Col>\r\n                \r\n            </Row>\r\n        </Box>\r\n\r\n        </LayoutWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.ReducerDanToc,\r\n    role: getRoleByKey(state.Auth.role, \"quan-ly-nam-hoc\"),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(LichSuDongBo);\r\n","import { Modal, Table, Tooltip, message,Tabs,Input  } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../../redux/DanhMuc/DanhMucDanToc/action\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport PageAction from \"../../../../components/utility/pageAction\";\r\nimport Box from \"../../../../components/utility/box\";\r\nimport BoxFilter from \"../../../../components/utility/boxFilter\";\r\nimport BoxTable from \"../../../../components/utility/boxTable\";\r\nimport Checkbox from \"../../../../components/uielements/checkbox\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  InputSearch,\r\n} from \"../../../../components/uielements/exportComponent\";\r\nimport {\r\n  changeUrlFilter,\r\n  getDefaultPageSize,\r\n  getFilterData,\r\n  getRoleByKey,\r\n} from \"../../../../helpers/utility\";\r\nimport { useKey } from \"../../../CustomHook/useKey\";\r\nimport queryString from \"query-string\";\r\nimport api from \"./config\";\r\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { CheckboxGroup } from \"../../../../components/uielements/checkbox\";\r\nimport DanhSachDonThu from \"./danhsachdonthu\";\r\nimport LichSuDongBo from './lichsudongbo';\r\nimport MappingDanhMucKNTCQuocGia from \"./Mappingdanhmuckntcquocgia\";\r\nconst QLNamHoc = (props) => {\r\n  document.title = \"Đồng bộ dữ liệu\";\r\n  const [filterData, setFilterData] = useState(\r\n    queryString.parse(props.location.search)\r\n  );\r\n  const [dataModalAddEdit, setDataModalAddEdit] = useState({});\r\n  const [visibleModalAddEdit, setVisibleModalAddEdit] = useState(false);\r\n  const [action, setAction] = useState(\"\");\r\n  const [modalKey, inceaseModalKey] = useKey();\r\n  const [selectedRowsKey, setSelectedRowsKey] = useState([]);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [activeKey,setActiveKey] = useState(\"1\")\r\n\r\n  useEffect(() => {\r\n    changeUrlFilter(filterData);\r\n    props.getData(filterData);\r\n    if(filterData.key){\r\n      setActiveKey(filterData.key)\r\n    }else {\r\n      setFilterData({...filterData,key : activeKey})\r\n    }\r\n  }, [filterData]);\r\n\r\n  useEffect(() => {\r\n    props.getData(filterData);\r\n  }, []);\r\n\r\n  const onTableChange = (pagination, filters, sorter) => {\r\n    let oldFilterData = filterData;\r\n    let onOrder = { pagination, filters, sorter };\r\n    let newFilterData = getFilterData(oldFilterData, null, onOrder);\r\n\r\n    setFilterData(newFilterData);\r\n\r\n  };\r\n\r\n  const onFilter = (value, property) => {\r\n    let oldFilterData = filterData;\r\n    let onFilter = { value, property };\r\n    let newfilterData = getFilterData(oldFilterData, onFilter, null);\r\n    //get filter data\r\n    setFilterData(newfilterData);\r\n    \r\n\r\n  };\r\n\r\n  const showModalAdd = () => {\r\n    setAction(\"add\");\r\n    setDataModalAddEdit({});\r\n    inceaseModalKey();\r\n    setVisibleModalAddEdit(true);\r\n  };\r\n\r\n  const deleteModalAddEdit = (DanTocID) => {\r\n    Modal.confirm({\r\n      title: \"Xóa Dữ Liệu\",\r\n      content: \"Bạn có muốn xóa dân tộc này không?\",\r\n      cancelText: \"Không\",\r\n      okText: \"Có\",\r\n      onOk: () => {\r\n        setConfirmLoading(true);\r\n        api\r\n          .XoaDanToc(DanTocID)\r\n          .then((res) => {\r\n            if (res.data.Status > 0) {\r\n              setConfirmLoading(false);\r\n              props.getData(filterData);\r\n              message.destroy();\r\n              message.success(res.data.Message);\r\n            } else {\r\n              message.destroy();\r\n              message.error(res.data.Message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            message.destroy();\r\n            message.error(error.toString());\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const showModalEdit = (id) => {\r\n    const DanTocID = id;\r\n    setAction(\"edit\");\r\n    api\r\n      .ChiTietDanToc({ DanTocID })\r\n      .then((res) => {\r\n        if (res.data.Status > 0) {\r\n          setDataModalAddEdit(res.data.Data);\r\n          inceaseModalKey();\r\n          setVisibleModalAddEdit(true);\r\n        } else {\r\n          message.destroy();\r\n          message.error(res.data.Message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.destroy();\r\n        message.error(error.toString());\r\n      });\r\n  };\r\n\r\n  const hideModalAddEdit = () => {\r\n    setAction(\"\");\r\n\r\n    setDataModalAddEdit({});\r\n    setVisibleModalAddEdit(false);\r\n  };\r\n\r\n  const submitModalAddEdit = (data) => {\r\n    console.log(\"true\");\r\n    setConfirmLoading(true);\r\n    if (action === \"add\") {\r\n      api\r\n        .ThemDanToc(data)\r\n        .then((res) => {\r\n          setConfirmLoading(false);\r\n          if (res.data.Status > 0) {\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n    if (action === \"edit\") {\r\n      api\r\n        .SuaDanToc(data)\r\n        .then((res) => {\r\n          if (res.data.Status > 0) {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.success(res.data.Message);\r\n            hideModalAddEdit();\r\n            props.getData(filterData);\r\n          } else {\r\n            setConfirmLoading(false);\r\n            message.destroy();\r\n            message.error(res.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setConfirmLoading(false);\r\n          message.destroy();\r\n          message.error(error.toString());\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderThaoTac = (record) => {\r\n    return (\r\n      <div className={\"action-btn\"}>\r\n        {/* {role.edit ? */}\r\n        <Tooltip title={\"Sửa\"}>\r\n          <EditOutlined onClick={() => showModalEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n        {/* {role.delete ? */}\r\n        <Tooltip title={\"Xóa\"}>\r\n          <DeleteOutlined onClick={() => deleteModalAddEdit(record.DanTocID)} />\r\n        </Tooltip>\r\n        {/* : \"\"} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const { DanhSachDanToc, TotalRow, role } = props;\r\n  const PageNumber = filterData.PageNumber\r\n    ? parseInt(filterData.PageNumber)\r\n    : 1;\r\n  const PageSize = filterData.PageSize\r\n    ? parseInt(filterData.PageSize)\r\n    : getDefaultPageSize();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      width: 5,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{(PageNumber - 1) * PageSize + (index + 1)}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mã dân tộc\",\r\n      dataIndex: \"MaDanToc\",\r\n      align: \"left\",\r\n      width: 20,\r\n    },\r\n    {\r\n      title: \"Tên dân tộc\",\r\n      dataIndex: \"TenDanToc\",\r\n      align: \"left\",\r\n      width: 35,\r\n    },\r\n    {\r\n      title: \"Ghi chú\",\r\n      dataIndex: \"GhiChu\",\r\n      align: \"left\",\r\n      width: 40,\r\n    },\r\n    {\r\n      title: \"Đang sử dụng\",\r\n      dataIndex: \"TrangThai\",\r\n      align: \"center\",\r\n      width: 30,\r\n      render: (text, record) => {\r\n        return <Checkbox checked={record.TrangThai}></Checkbox>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      width: \"15%\",\r\n      align: \"center\",\r\n      margin: \"15px\",\r\n      render: (text, record) => renderThaoTac(record),\r\n    },\r\n  ];\r\n\r\n  const handleChangeTabs = activeKey => {\r\n    console.log(activeKey,'activeKey')\r\n  }\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <PageHeader>Chọn dữ liệu đồng bộ</PageHeader>\r\n      <PageAction>\r\n        {/* {role ? role.add ?  */}\r\n        <Button type=\"primary\" onClick={showModalAdd}>\r\n          <PlusOutlined />\r\n          Thêm mới\r\n        </Button>\r\n        {/* //  : '' : ''} */}\r\n      </PageAction>\r\n      <Box>\r\n        <BoxFilter>\r\n          <div>\r\n            <p>\r\n              Từ ngày\r\n            </p>\r\n            <div>\r\n              <DatePicker/>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p>Đến ngày : </p>\r\n            <div>\r\n              <DatePicker/>\r\n            </div>\r\n          </div>\r\n        </BoxFilter>\r\n        <Tabs activeKey = {activeKey} onChange={activeKey => onFilter(activeKey,'key')}>\r\n          <Tabs.TabPane tab=\"Danh sách đơn thu\" key=\"1\">\r\n            <DanhSachDonThu filterData = {filterData} setFilterData = {setFilterData}/>\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Lịch sử đồng bộ\" key=\"2\">\r\n            <LichSuDongBo filterData = {filterData} setFilterData = {setFilterData}/>\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Mapping danh mục KNTC Quốc gia\" key=\"3\">\r\n            <MappingDanhMucKNTCQuocGia filterData = {filterData} setFilterData = {setFilterData}/>\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </Box>\r\n\r\n    </LayoutWrapper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.ReducerDanToc,\r\n    role: getRoleByKey(state.Auth.role, \"quan-ly-nam-hoc\"),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(QLNamHoc);\r\n"],"names":["checkbox","ComponentName","styled","palette","AntCheckbox","Checkbox","CheckboxGroup","WDComponentDivAction","ComponentDivAction","WithDirection","props","children","useKey","useState","modalKey","setModalKey","server","Form","connect","state","ReducerDanToc","role","getRoleByKey","Auth","actions","document","title","useForm","form","filterData","setFilterData","setSelectedRowsKey","loaiDongBo","setLoaiDongBo","useEffect","changeUrlFilter","getData","DanhSachDanToc","TotalRow","PageNumber","parseInt","PageSize","getDefaultPageSize","columns","align","render","text","record","index","dataIndex","margin","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","disabled","name","gutter","xs","md","className","defaultValue","e","target","value","dataSource","age","address","key","pagination","filters","sorter","oldFilterData","onOrder","newFilterData","getFilterData","showSizeChanger","showTotal","total","range","current","pageSize","onTableChange","columnsTest","dataTest","style","width","marginLeft","scroll","x","queryString","location","search","setDataModalAddEdit","setVisibleModalAddEdit","setAction","inceaseModalKey","activeKey","setActiveKey","type","onClick","PlusOutlined","property","onFilter","newfilterData","tab"],"sourceRoot":""}