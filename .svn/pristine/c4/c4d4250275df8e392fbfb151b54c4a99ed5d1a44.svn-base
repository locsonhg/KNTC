{"version":3,"file":"static/js/865.4e5396f9.chunk.js","mappings":"kLAGMA,EAAuBC,EAAAA,GAAAA,IAAH,ufAsBpBC,GAAqBC,EAAAA,EAAAA,GAAcH,G,WCtBzC,WAAeI,GAAK,OAClB,SAACF,EAAD,UACKE,EAAMC,a,gFCHb,SAASC,EAAOF,GACd,OAAgCG,EAAAA,EAAAA,UAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,MAAO,CAACD,EAHY,WAClBC,EAAYD,EAAW,O,qOCgH3B,E,SAnHgBP,GAAAA,IAAH,+5FAoCS,SAAAG,GAAK,OAAIA,EAAMM,c,WCjC/BC,EAAQ,SAAC,GAER,IAFUC,EAEX,EAFWA,YAAaC,EAExB,EAFwBA,UAA0BC,GAElD,EAFmCC,cAEnC,EAFkDD,SAASE,EAE3D,EAF2DA,KAC7DC,EACE,EADFA,iBAA2CC,GACzC,EADgBC,yBAChB,EADyCD,SAAQE,EACjD,EADiDA,qBAAqBC,EACtE,EADsEA,WAAWC,EACjF,EADiFA,qBAEnF,GAAwCf,EAAAA,EAAAA,UAAS,IAAjD,eACA,GADA,WACkCA,EAAAA,EAAAA,WAAS,IAA3C,0BACYgB,EAAAA,EAAAA,WAGZC,EAAAA,EAAAA,YAAU,WACN,GAAY,IAATR,EAAW,CACV,IAAMS,EAAQC,SAASC,eAAe,kBAClCC,EAAa,EAEjBC,QAAQC,IAAIL,EAAM,SAalBA,EAAMM,iBACF,UACA,WAEI,GAAIC,KAAKC,IAAIR,EAAMS,aAAeT,EAAMU,aAAeV,EAAMW,WAAa,EAAG,CACzEP,QAAQC,IAAI,cAEZF,IACA,IAAMS,EAAiBpB,EAAgB,OAACK,QAAD,IAACA,OAAD,EAACA,EAAsBgB,MAAvB,OAA6BhB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAsBiB,MAAnD,OAAyDjB,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAsBkB,SAAS,MAAMZ,GACrIC,QAAQC,IAAIO,EAAe,qBAGnC,CACII,SAAS,OAIvB,CAACzB,IAEH,IAAM0B,EAAiB,SAAjBA,EAAkBC,GAAmB,IAAbC,EAAY,uDAAN,EAC7BD,IACCC,IACAD,EAAKE,SAAQ,SAACC,EAAMC,GAMhB,GALID,EAAKE,UACLF,EAAKF,IAAMA,EAIXG,IAAUJ,EAAKM,OAAS,EAAG,CAC3B,IAAMC,EAAaP,EAAKQ,QAAO,SAAAL,GAAI,OAAIA,EAAKE,aAE5CE,EAAWL,SAAQ,SAAAC,GACfJ,EAAeI,EAAKE,UAAWJ,YAS7CQ,EAA2B,WAC7BvB,QAAQC,IAAI,uBACZ,IAAMuB,EAAa,CACfC,KAAM,GACNlD,MAAO,CACHmD,UAAW,GACXlD,SAAU,KAmLlB,OAHAqC,EAAe9B,GA7KC,SAAV4C,EAAWb,EAAMc,GACjBd,GACFA,EAAKe,KAAI,SAAAZ,GACL,GAAIA,EAAKE,UAAW,CAChB,IAoBIW,EApBEC,EAAU,CACZN,KAAM,GACNlD,MAAO,GAEPyD,WAAY,IAEVC,EAAU,CACZR,KAAM,GACNlD,MAAO,GAEPyD,WAAY,IAEXf,EAAKE,YACNY,EAAQxD,MAAM2D,QAAU,GAE5BD,EAAQ1D,MAAM4D,GAAd,OAAmBP,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAYb,IAC/BgB,EAAQxD,MAAM4D,GAAKlB,EAAKmB,IAMD,SAAjBC,EAAkBC,EAAUvB,GAC9BuB,EAAStB,SAAQ,SAAAC,GACTA,EAAK1C,MAAMyD,YAAcf,EAAK1C,MAAMyD,WAAWZ,OAAS,EACpDmB,OAAOtB,EAAK1C,MAAM4D,MAAQI,OAAOxB,GACjCe,EAAkBb,EAElBoB,EAAepB,EAAK1C,MAAMyD,WAAZ,OAAwBjB,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAKyB,YAG3CD,OAAOtB,EAAK1C,MAAM4D,MAAQI,OAAOxB,KACjCe,EAAkBb,MAKlCoB,CAAeb,EAAWjD,MAAMC,SAAWgD,EAAWjD,MAAMC,SAAW,GAAzD,OAA6DoD,QAA7D,IAA6DA,OAA7D,EAA6DA,EAAYb,KAEvFgB,EAAQxD,MAAMmD,UAAY,gBA8B1BK,EAAQxD,MAAMkE,QA5BS,SAAC3B,EAAM4B,GAC1B,IAAIC,EAAc,EAwBlB,OAvBsB,SAAhBC,EAAiB9B,EAAM4B,GACrBA,EACA5B,EAAKe,KAAI,SAAAZ,GACDA,EAAKmB,KAAOM,EAASN,GACjBnB,EAAKE,WACLyB,EAAc3B,EAAKE,UAAW,MAG3BF,EAAKE,WAAaF,EAAKmB,KAAOM,EAASN,IAC9CQ,EAAc3B,EAAKE,UAAWuB,MAItC5B,EAAKe,KAAI,SAAAZ,GACDA,EAAKE,UACLyB,EAAc3B,EAAKE,UAAW,KAAMwB,GAEpCA,GAAe,KAK/BC,CAAc9B,EAAM4B,GACbC,EAGaE,CAAe/B,EAAMG,GAC7Cc,EAAQN,KAAOR,EAAKQ,KACpB,IAAMqB,EAAKC,EAAAA,cAAoB,MAApB,UAA+BhB,EAAQxD,OAAS,CAACwD,EAAQN,OAC9DuB,EAAKD,EAAAA,cAAoB,MAApB,UAA+Bd,EAAQ1D,OAAS,CAACuE,IAC5D,GAAIhB,EAAiB,CACjB,IAAImB,GAAa,EACXC,EAAYpB,EAAgBvD,MAAMC,SACxC,GAAI0E,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAU9B,OAAQ+B,IAAK,CAAC,IAAD,EACnCC,OAAM,UAACF,EAAUC,GAAG5E,aAAd,aAAC,EAAoB4D,MAAQiB,OAAOnC,EAAKmB,MAC/Ca,GAAa,GAKpBA,GACDnB,EAAgBvD,MAAMC,SAAS6E,KAAKP,QAIxCtB,EAAWjD,MAAMC,SAAS6E,KAAKL,GAEnCrB,EAAQV,EAAKE,UAAYF,EAAKE,UAAY,GAAIF,OAE3C,CACH,IA+BIa,EA/BEC,EAAU,CACZN,KAAM,GACNlD,MAAO,GAGPyD,WAAY,GACZsB,MAAO,IAELrB,EAAU,CACZR,KAAM,GACNlD,MAAO,GAGPyD,WAAY,IAUhBD,EAAQN,KAAOR,EAAKQ,KAEpBQ,EAAQ1D,MAAM4D,GAAe,OAAVP,QAAU,IAAVA,GAAAA,EAAYb,IAAZ,OAAkBa,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAYb,IAAM,EACvDgB,EAAQxD,MAAM4D,GAAKlB,EAAKmB,GACnBnB,EAAKE,YACNY,EAAQxD,MAAM2D,QAAU,GAE5BD,EAAQE,GAAe,OAAVP,QAAU,IAAVA,GAAAA,EAAYb,IAAZ,OAAkBa,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAYb,IAAM,GAI1B,SAAjBsB,EAAkBC,EAAUvB,GAC9BuB,EAAStB,SAAQ,SAAAC,GACTA,EAAK1C,MAAMyD,YAAcf,EAAK1C,MAAMyD,WAAWZ,OAAS,EACpDmB,OAAOtB,EAAK1C,MAAM4D,MAAQI,OAAOxB,GACjCe,EAAkBb,EAElBoB,EAAepB,EAAK1C,MAAMyD,WAAZ,OAAwBjB,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAKyB,YAG3CD,OAAOtB,EAAK1C,MAAM4D,MAAQI,OAAOxB,KACjCe,EAAkBb,MAKlCoB,CAAeb,EAAWjD,MAAMC,SAAlB,OAA4BoD,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAYb,KACtD,IAAM+B,EAAKC,EAAAA,cAAoB,MAApB,UAA+BhB,EAAQxD,OAAS,CAACwD,EAAQN,OAC9DuB,EAAKD,EAAAA,cAAoB,MAApB,UAA+Bd,EAAQ1D,OAAS,CAACuE,IAE5D,GAAIhB,EAAiB,CACjB,IAAImB,GAAa,EACXC,EAAYpB,EAAgBvD,MAAMC,SAGxC,GAAI0E,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAU9B,OAAQ+B,IAAK,CAAC,IAAD,EACnCC,OAAM,UAACF,EAAUC,GAAG5E,aAAd,aAAC,EAAoB4D,MAAQiB,OAAOnC,EAAKmB,MAC/Ca,GAAa,GAIpBA,GACDnB,EAAgBvD,MAAMC,SAAS6E,KAAKP,QAGxCtB,EAAWjD,MAAMC,SAAS6E,KAAKL,OAO/CrB,CAAQ5C,GACMgE,EAAAA,cAAoB,QAAS,MAA7B,OAAuCvB,EAAWjD,MAAMC,YAIpE+E,EAAwB,WAC1B,IAAMC,EAAY,CACd/B,KAAM,GACNlD,MAAO,CACHmD,UAAW,GACXlD,SAAU,GACV2D,GAAI,cAKZ,OAFAsB,EAAsBD,EAAWxE,EAAWA,GAC9B+D,EAAAA,cAAoB,SAApB,UAAkCS,EAAUjF,QAA5C,OAAyDiF,EAAUjF,MAAMC,YAIrFkF,EAA4B,SAACzC,EAAMuC,EAAW1C,GAEhD,IAAM6C,EAAkB9D,SAAS+D,iBAAT,4BAA+C3C,EAAK4C,SAApD,OAClBC,GAAc,OAAON,EAAUhF,UACrCuF,MAAMC,QAAQF,GAkBd,IAjBA,IAAMG,EAAe,GACfC,EAAa,SAAbA,EAAapD,GACfA,EAAKE,SAAQ,SAAAC,GACLA,EAAKE,WACA8C,EAAaE,SAASlD,EAAKmB,KAC5B6B,EAAaZ,KAAKpC,EAAKmB,IAE3B8B,EAAWjD,EAAKE,YAEX8C,EAAaE,SAASlD,EAAKmB,KAC5B6B,EAAaZ,KAAKpC,EAAKmB,QAKjCgC,EAAoB,GApB+B,WAsBhDjB,IAEkB,SAAjBkB,EAAkBvD,EAAMwD,GAC1BxD,EAAKE,SAAQ,SAAAC,GACLA,EAAKE,UACDiC,OAAOnC,EAAKmB,MAAQgB,OAAOkB,GACtBF,EAAkBD,SAASf,OAAOnC,KACnCmD,EAAkBf,KAAKpC,GAG3BoD,EAAepD,EAAKE,UAAWmD,GAG/BlB,OAAOnC,EAAKmB,MAAQgB,OAAOkB,KACtBF,EAAkBD,SAASf,OAAOnC,KACnCmD,EAAkBf,KAAKpC,OAM3CoD,CAAevD,EAAM6C,EAAgBR,GAAGoB,aAAa,aAGrDL,EAAWE,GAGX,IAAMI,EAA0B,GAEhCP,EAAajD,SAAQ,SAAAoB,GACjB,IAAMqC,EAAiB5E,SAAS+D,iBAAT,qBAAwCxB,EAAxC,OACnBqC,GACAD,EAAwBnB,KAAxB,MAAAmB,GAAuB,OAASC,OAIxCD,EAAwBxD,SAAQ,SAAAC,GAC5B,IAAMkB,EAAKlB,EAAKsD,aAAa,YAC7BtD,EAAKyD,UAAUC,OAAf,gBAA+BxC,IAC/BlB,EAAK2D,aAAa,kBAAmB,MACrC3D,EAAKyD,UAAUG,IAAI,wBAxClB1B,EAAI,EAAGA,EAAIQ,EAAgBvC,OAAQ+B,IAAM,EAAzCA,IA6CP2B,EAA0B,SAAC7D,EAAMH,EAAM0C,EAAWuB,GAAe,IAI/DC,EAHEC,EAAepF,SAASqF,uBAAT,gBAAyCjE,EAAK4C,YAC/C,OAAOL,EAAUhF,UACV8C,QAAO,SAAA6D,GAAU,OAAI/B,OAAO+B,EAAWZ,aAAa,cAAgBnB,OAAOnC,EAAK4C,aAAW,GAGtHuB,EAAgBL,EAAW9D,EAAK4C,SAAUmB,GAE1C,IAAIK,EAAkB,IAEtB,GAAIJ,EAAa7D,OAAQ,CACrB,IAAMkE,EAAMzF,SAAS+D,iBAAT,qBAAwC3C,EAAKmB,GAA7C,OACZ,GAAIkD,EAAIlE,OAAQ,CACZ,IAAMmE,GAAsB,OAAOD,GACnCvB,MAAMC,QAAQuB,GACdA,EAAuBvE,SAAQ,SAAAwE,GAC3BA,EAAcZ,aAAa,kBAAmB3D,EAAK4C,UACnD2B,EAAcd,UAAUC,OAAO,2BAEhC,CACH,IAAM3B,EAAKnD,SAAS4F,cAAc,MAClCxE,EAAKyE,QAAQ1E,SAAQ,SAAC2E,EAAUC,GAC5B,IAGIC,EAHEC,EAAKjG,SAAS4F,cAAc,MAClCK,EAAG3D,GAAKwD,EAASvD,GACjB0D,EAAGpB,UAAUG,IAAI,aAEb,OAACc,QAAD,IAACA,GAAAA,EAAUI,SAIXF,EAAYhG,SAAS4F,cAAc,UACzBO,aAAoC,MAArBL,EAASM,QAAkBN,EAASM,QAAU,GACvEJ,EAAUK,WAAW,OAACjF,QAAD,IAACA,GAAAA,EAAM8E,QAC5BF,EAAUM,MAA6B,MAArBR,EAASM,QAAkBN,EAASM,QAAU,KANhEJ,EAAYhG,SAAS4F,cAAc,MACzBW,YAA+B,MAAjBnF,EAAKgF,QAAkBhF,EAAKgF,QAAU,GAOlEJ,EAAUvC,MAAM+C,QAAhB,OAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUW,MACpCR,EAAGS,YAAYV,GACf7C,EAAGuD,YAAYT,GAGG,IAAdF,IACAE,EAAGU,QAAU,WACTxG,QAAQC,IAAI,sBACRgB,EAAKE,YACL6B,EAAG0B,UAAU+B,OAAb,gBAA6BxF,EAAKmB,KAClCsE,EAAuBzF,EAAKE,UAAWF,EAAMuC,EAAWuB,SAKxE/B,EAAG4B,aAAa,WAAY3D,EAAKmB,IACjCY,EAAG4B,aAAa,UAAW3D,EAAKmB,IAChCY,EAAG4B,aAAa,kBAAmB3D,EAAK4C,UACxC,IAAM8C,GAAG,OAAOnD,EAAUhF,UAC1BuF,MAAMC,QAAQ2C,GAWdnD,EAAUoD,aAAa5D,EAAIQ,EAAUhF,SAAS6G,OAKpDD,EAAkB,SAAlBA,EAAmBtE,EAAM+C,EAAUmB,GACrClE,EAAKE,SAAQ,SAAAC,GACLA,EAAKE,UACDF,EAAKmB,KAAOyB,EACH5C,EAETmE,EAAgBnE,EAAKE,UAAW0C,GAGhC5C,EAAKmB,KAAOyB,GACH5C,MAMnB4F,EAA6B,SAAC5F,EAAMH,EAAM0C,EAAWuB,EAAWE,GAAkB,IAGhFD,EADEM,EAAMzF,SAAS+D,iBAAT,oBAAuC3C,EAAKmB,GAA5C,OAGZgD,EAAgBL,EAAW9D,EAAK4C,SAAUmB,GAE1C,IAAIK,EAAkB,IACtB,GAAIJ,EAAa7D,OACb,GAAIkE,EAAIlE,OAAQ,CACZ,IAAMmE,GAAsB,OAAOD,GACnCvB,MAAMC,QAAQuB,GAEdA,EAAuBvE,SAAQ,SAAAwE,GAC3BA,EAAcZ,aAAa,kBAAmB3D,EAAK4C,UACnD2B,EAAcd,UAAUC,OAAO,2BAEhC,CAEH,IAAM3B,EAAKnD,SAAS4F,cAAc,MAClCxE,EAAKyE,QAAQ1E,SAAQ,SAAA8F,GAEjB,IAEIjB,EAFEC,EAAKjG,SAAS4F,cAAc,MAGlCzF,QAAQC,IAAI6G,EAAQ,UAChB,OAACA,QAAD,IAACA,GAAAA,EAAQf,SAITF,EAAYhG,SAAS4F,cAAc,UACzBO,aAAec,EAAOb,QAAUa,EAAOb,QAAU,GAC3DJ,EAAUK,UAAYY,EAAOf,SAL7BF,EAAYhG,SAAS4F,cAAc,MACzBW,YAA+B,MAAjBnF,EAAKgF,QAAkBhF,EAAKgF,QAAU,GAMlEJ,EAAUvC,MAAM+C,QAAhB,OAA0BS,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQR,MAElCR,EAAGS,YAAYV,GAEf7C,EAAGuD,YAAYT,MAEnB9C,EAAG4B,aAAa,WAAY3D,EAAKmB,IACjCY,EAAG4B,aAAa,UAAW3D,EAAKmB,IAChCY,EAAG4B,aAAa,kBAAmB3D,EAAK4C,UAExC,IAAM8C,GAAG,OAAOnD,EAAUhF,UAC1BuF,MAAMC,QAAQ2C,GAWdnD,EAAUoD,aAAa5D,EAAIQ,EAAUhF,SAAS6G,MAMpDqB,EAAyB,WAAmD,IAAlD5F,EAAiD,uDAA1C,GAAiB0C,EAAyB,uCAAduB,EAAc,uCAC7EjE,EAAKE,SAAQ,SAAAC,GAAS,IAAD,EACXgE,EAAepF,SAASqF,uBAAT,gBAAyCjE,EAAK4C,WAC9DoB,EAAa7D,QAGH,OAAJH,QAAI,IAAJA,GAAA,UAAAA,EAAME,iBAAN,eAAiBC,QAAS,GAAK6D,EAAa7D,OACnD0D,EAAwB7D,EAAMH,EAAM0C,EAAWuB,GACxC,OAAC9D,QAAD,IAACA,GAAAA,EAAME,YAAa8D,EAAa7D,QACxCyF,EAA2B5F,EAAMH,EAAM0C,EAAWuB,EAAWE,GAJ7DvB,EAA0BzC,EAAMuC,EAAW1C,OASjD2C,EAAwB,SAACD,GAAqC,IAA1B1C,EAAyB,uDAAlB,GAAIiE,EAAc,uCAC/DjE,EAAKE,SAAQ,SAAC+F,GAEV,IAAMC,EAAU,CACZvF,KAAM,GACNlD,MAAO,CACHmD,UAAW,GACXlD,SAAU,KAGduI,EAASrB,SACTqB,EAASrB,QAAQ1E,SAAQ,SAACC,EAAMC,GAE5B,GAAc,IAAVA,EAAa,CAAC,IAAD,IAEP+F,EAAU,CACZxF,KAAM,GACNlD,MAAO,CACHmD,UAAW,GACXlD,SAAU,KAId0I,EAAiB,CACjBzF,KAAM,GACNlD,MAAO,CACHmD,UAAW,KAIf,OAACT,QAAD,IAACA,GAAAA,EAAM8E,QAGPmB,EAAe3I,MAAMyH,aAAgC,MAAjB/E,EAAKgF,QAAkBhF,EAAKgF,QAAU,GAC1EiB,EAAe3I,MAAM2H,WAAW,OAACjF,QAAD,IAACA,GAAAA,EAAM8E,SAHvCmB,EAAe3I,MAAM6H,YAA+B,MAAjBnF,EAAKgF,QAAkBhF,EAAKgF,QAAU,GAO7E,IAAMJ,EAAY,OAAC5E,QAAD,IAACA,GAAAA,EAAM8E,OAAoGhD,EAAAA,cAAoB,SAApB,UAAkCmE,EAAe3I,QAA5IwE,EAAAA,cAAoB,KAApB,UAA8BmE,EAAe3I,OAA7C,UAAsD2I,EAAe3I,aAArE,aAAsD,EAAsB6H,aAE9Ga,EAAQ1I,MAAMC,SAAS6E,KAAKwC,GAC5BoB,EAAQ1I,MAAM4D,GAAKlB,EAAKmB,GACxB6E,EAAQ1I,MAAMmD,WAAa,WAC3BuF,EAAQ1I,MAAM,WAAawI,EAAS3E,GAEpC,IAAMR,EAAad,EAAKQ,QAAO,SAAAL,GAAI,OAAIA,EAAKmB,KAAO2E,EAAS3E,MACtD+E,EAAS,UAAGvF,EAAW,UAAd,aAAG,EAAeT,UAmBjC8F,EAAQ1I,MAAM6I,QAAU,kBAjBM,WAAO,IAAD,EAChCpH,QAAQC,IAAI,cACZ,IAAMuD,EAAY3D,SAASC,eAAe,aAEpCuH,EAAavG,EAAKQ,QAAO,SAAAgG,GAAK,OAAIA,EAAM5B,QAAQvB,SAASlD,MAErCpB,SAAS+D,iBAAT,oBAAuCyD,EAAW,GAAGjF,GAArD,OAA6D,GACrEsC,UAAU+B,OAA5B,0BAA4CY,EAAW,UAAvD,aAA4C,EAAejF,KAEvD+E,EACAT,EAAuBS,EAAWnE,EAAIQ,EAAWuB,IAEjDwC,EAAAA,GAAAA,UACAA,EAAAA,GAAAA,QAAgB,qCAIMC,IAE9B,IAAM1E,EAAKC,EAAAA,cAAoB,MAApB,UAA+BkE,EAAQ1I,QAAvC,OAAoD0I,EAAQ1I,MAAMC,WAE7EwI,EAAQzI,MAAMC,SAAS6E,KAAKP,OACzB,CAAC,IAAD,EAEGf,EAAU,CACZN,KAAM,GACNlD,MAAO,CACHmD,UAAW,GACXlD,SAAU,KAId0I,EAAiB,CACjBzF,KAAM,GACNlD,MAAO,CACHmD,UAAW,KAIf,OAACT,QAAD,IAACA,GAAAA,EAAM8E,OAIPmB,EAAe3I,MAAM2H,UAAYjF,EAAK8E,OAHtCmB,EAAe3I,MAAM6H,YAA+B,MAAjBnF,EAAKgF,QAAkBhF,EAAKgF,QAAU,GAO7ElE,EAAQxD,MAAM4D,GAAKlB,EAAKmB,GAExB,IAAMyD,EAAY,OAAC5E,QAAD,IAACA,GAAAA,EAAM8E,OACbhD,EAAAA,cAAoB,SAApB,UAAkCmE,EAAe3I,QAD3BwE,EAAAA,cAAoB,KAApB,UAA8BmE,EAAe3I,QAAS,cAAGkJ,wBAAyB,CAAEC,OAAM,UAAER,EAAe3I,aAAjB,aAAE,EAAsB6H,gBAGpJrE,EAAQxD,MAAMC,SAAS6E,KAAKwC,GAC5B9D,EAAQxD,MAAMmD,UAAY,YAG1BK,EAAQxD,MAAM6I,QAAU,WACpBhI,EAAiB6B,EAAKR,MAAMS,EAAMD,EAAKN,SAAS,OAChD1B,EAAQ,IAEZ,IAAM6D,EAAKC,EAAAA,cAAoB,MAApB,UAA+BhB,EAAQxD,QAAvC,OAAoDwD,EAAQxD,MAAMC,WAE7EwI,EAAQzI,MAAMC,SAAS6E,KAAKP,OAIxCkE,EAAQzI,MAAMmD,WAAa,UAE3B,IAAMsB,EAAKD,EAAAA,cAAoB,MAApB,UAA+BiE,EAAQzI,QAAvC,OAAoDyI,EAAQzI,MAAMC,WAC7EgF,EAAUjF,MAAMC,SAAS6E,KAAKL,OAStC,OAHAhD,QAAQC,IAAa,IAATd,GAAcE,IAGnB,SAAC,EAAD,WACH,iBAAKqC,UAAU,iBAAiBS,GAAK,iBAArC,UACc,IAAThD,EAAaI,GAAwB,gBAAKmC,UAAU,iBAAf,UAC9B,SAAC,IAAD,CAAMiG,KAAK,aACN,+BACT,mBAAOxF,GAAK,QAAZ,UACKZ,IACAgC,SAGP,KAEQ,IAATpE,EAAaI,GAAuB,gBAAKmC,UAAU,iBAAf,UAC7B,SAAC,IAAD,CAAMiG,KAAK,aACL,iCACV,mBAAOxF,GAAK,QAAZ,UACKZ,IACAgC,QAEL,mBAAQ6D,QAAS,kBAAM5H,KAAvB,UAAqC,SAACoI,EAAA,EAAD,SAEvC,WC3kBd,G,2BAnCe,SAAC,GAIV,EAHJC,MAGI,EAHwBC,KAGxB,EAH6BC,cAG7B,EAHgDC,SAGhD,EAHyDjJ,YAGxD,IAAD,QAH0EkJ,EAG1E,EAH0EA,aAAa3I,EAGvF,EAHuFA,yBAC3F4I,EAEI,EAFJA,eAAehJ,EAEX,EAFWA,cAAciJ,EAEzB,EAFyBA,sBAAsB/I,EAE/C,EAF+CA,iBAAiBG,EAEhE,EAFgEA,qBAAqBJ,EAErF,EAFqFA,KAAKF,EAE1F,EAF0FA,QAAQO,EAElG,EAFkGA,WACtGC,EACI,EADJA,qBAGA,GAAoCf,EAAAA,EAAAA,UAAS,IAA7C,eACA,GADA,WACiDA,EAAAA,EAAAA,UAAS,KAA1D,0BAGAiB,EAAAA,EAAAA,YAAU,cAEP,CAACwI,IAEJ,IAAMC,EAAc,CAClBrJ,YAAuB,IAATI,EAAA,OAAa+I,QAAb,IAAaA,GAAb,UAAaA,EAAgBG,iBAA7B,aAAa,EAA2BC,YAAuB,IAATnJ,EAAA,OAAagJ,QAAb,IAAaA,GAAb,UAAaA,EAAuBE,iBAApC,aAAa,EAAkCC,YAAc,GACjItJ,UAAsB,IAATG,EAAA,OAAa+I,QAAb,IAAaA,GAAb,UAAaA,EAAgBG,iBAA7B,aAAa,EAA2BE,UAAqB,IAATpJ,EAAA,OAAagJ,QAAb,IAAaA,GAAb,UAAaA,EAAuBE,iBAApC,aAAa,EAAkCE,UAAY,GAC5HjJ,yBAAAA,EACAC,qBAAAA,EACAE,qBAAAA,EACAL,iBAAAA,EACA6I,aAAAA,EACA/I,cAAAA,EACAD,QAAAA,EACAE,KAAAA,EACAK,WAAAA,GAIF,OAAO,+BACH,SAACV,GAAD,UAAWsJ,S,gFCxDjB,EADuB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8MAAkN,KAAQ,WAAY,MAAS,Y,WCKzYR,EAAmB,SAA0BrJ,EAAOiK,GACtD,OAAoBzF,EAAAA,cAAoB0F,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAInK,GAAQ,GAAI,CAC5FiK,IAAKA,EACLG,KAAMC,MAGVhB,EAAiBiB,YAAc,mBAC/B,MAA4B9F,EAAAA,WAAiB6E","sources":["components/utility/pageAction.style.js","components/utility/pageAction.js","customApp/CustomHook/useKey.js","customApp/containers/BaoCao/ReportOrigin/table.styled.js","customApp/containers/BaoCao/ReportOrigin/table.js","customApp/containers/BaoCao/ReportOrigin/index.js","../node_modules/@ant-design/icons-svg/es/asn/RollbackOutlined.js","../node_modules/@ant-design/icons/es/icons/RollbackOutlined.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentDivAction = styled.div`\r\n    text-align: right;\r\n    display: inline-block;\r\n    flex: 1;\r\n    padding: 0 3px 0 0;\r\n    @media only screen and (max-width: 1336px) {\r\n        text-align: left;\r\n        display: block;\r\n        flex: none;\r\n        width: 100%;\r\n        padding: 0 0 10px 0;\r\n    }\r\n    button {\r\n        margin-right: 0px;\r\n        margin-left: 10px;\r\n        @media only screen and (max-width: 1336px) {\r\n            margin-left: 0px;\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ComponentDivAction = WithDirection(WDComponentDivAction);\r\nexport { ComponentDivAction };\r\n","import React from 'react';\r\nimport { ComponentDivAction } from './pageAction.style';\r\n\r\nexport default props =>\r\n  <ComponentDivAction>\r\n      {props.children}\r\n  </ComponentDivAction>;\r\n","import {useEffect, useState} from \"react\";\r\n\r\nfunction useKey(props) {\r\n  const [modalKey, setModalKey] = useState(0);\r\n  const increaseKey = () => {\r\n    setModalKey(modalKey + 1);\r\n  };\r\n  return [modalKey, increaseKey];\r\n}\r\n\r\nexport {useKey};","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div` \r\n    flex-basis: 100%;\r\n    height: 100%;\r\n    .visible {\r\n        display: none;\r\n    }\r\n    .wrapperLoading {\r\n      background : rgba(255,255,255,0.5);\r\n      position: absolute;\r\n      top: 70px;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n        p {\r\n            text-align: left;\r\n        }\r\n        .disabled-rowItem {\r\n            display: none;\r\n        }\r\n        .wrapper__table {\r\n            max-height: 630px;\r\n            overflow-y: scroll;\r\n            width: calc(100% + 5px);\r\n            /* box-shadow : 0px 1px 0px 0px black; */\r\n        }\r\n        /* table, th, td {\r\n            border: 1px solid black;\r\n            border-color: #000000;\r\n        } */\r\n        #my-table {\r\n            table-layout: fixed;\r\n            /* width: 100%; */\r\n            width : ${props => props.TableWidth}\r\n    \r\n        }\r\n        div.wrapper-table {\r\n            /* max-height: 550px; */\r\n        }\r\n        tbody tr {\r\n            border: 1px solid;\r\n            border-color: #000000;\r\n            height: 50px;\r\n        }\r\n        tbody   .trHover:hover {\r\n            background-color: #e6e6e6;\r\n            cursor: pointer;\r\n            input {\r\n                background-color: #e6e6e6 !important;\r\n            }\r\n        }\r\n        tbody input {\r\n            width: 100%;\r\n            border: none;\r\n            outline: none;\r\n        }\r\n        table {\r\n            border-collapse: collapse;\r\n            /* height: 100%; */\r\n            table-layout: fixed;\r\n            /* max-height: 300px; */\r\n        }\r\n        th {\r\n            font-size: 12px;\r\n        }\r\n        thead {\r\n            z-index: 222;\r\n            background: #fff;\r\n            position: sticky;\r\n            top: 0px;\r\n        }\r\n        thead th {\r\n            padding: 10px;\r\n            border: 1px solid;\r\n            border-color: #000000;\r\n            /* display:table; */\r\n            /* table-layout:fixed; */\r\n            box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\r\n        }\r\n        tbody th {\r\n            border: 1px solid;\r\n            border-color: #000000;\r\n            word-break : break-all\r\n            /* border-left: 1px solid;\r\n             */\r\n        }\r\n        tbody td  {\r\n            border: 1px solid;\r\n            border-color: #000000;\r\n        }\r\n        /* thead,tbody { display: block; } */\r\n\r\n        tbody {\r\n         \r\n            overflow-y: auto;    /* Trigger vertical scroll    */\r\n            overflow-x: hidden;  /* Hide the horizontal scroll */\r\n            border-collapse: collapse;\r\n            width: 100%;\r\n            table-layout: fixed;\r\n        }\r\n        table thead th {\r\n            border-top: none !important;\r\n            border-bottom: none !important;\r\n            box-shadow: inset 0 -1px 0 #000000, inset 0 1px 0 #000000;\r\n            font-size: 15px;\r\n            height: 50px;\r\n  /* padding: 2px 0; */\r\n        }\r\n\r\n`\r\n\r\n\r\nexport default Wrapper","import { message,Spin } from 'antd'\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react'\r\nimport {RollbackOutlined } from '@ant-design/icons'\r\nimport PageWrapper from './table.styled'\r\n\r\nconst Table = ({ tableHeader, tableData, ChiTietDonThu, setStep, Step,\r\n    GetChiTietDonThu ,setThongTinBaoCaoChiTiet,loading,loadingDetailsReport,onRollBack,DetailsReportPayload\r\n}) => {\r\n    const [detailsTable, setDetailsTable] = useState({})\r\n    const [showTable, setShowTable] = useState(false)\r\n    const ref = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        if(Step === 2){\r\n            const table = document.getElementById('wrapper__table')\r\n            let PageNumber = 1\r\n    \r\n            console.log(table,'table')\r\n    \r\n            // const loadMore = () => {\r\n            //     for (let i = 0; i < 20; i++) {\r\n            //         let row = table.insertRow(-1);\r\n            //         row.insertCell(0).innerHTML =\r\n            //         firstName[Math.floor(Math.random() * firstName.length)];\r\n            //         row.insertCell(1).innerHTML =\r\n            //         lastName[Math.floor(Math.random() * lastName.length)];\r\n            //         row.insertCell(2).innerHTML = Math.floor(Math.random() * 101);\r\n            //     }\r\n            // };\r\n            // CapID, Index, CoQuanID,key\r\n            table.addEventListener(\r\n                \"scroll\",\r\n                () => {\r\n                    // console.log('load more')\r\n                    if (Math.abs(table.scrollHeight - table.clientHeight - table.scrollTop) < 1) {\r\n                        console.log('end scroll')\r\n                        // console.log(DetailsReportPayload,'DetailsReportPayload')\r\n                        PageNumber++\r\n                        const ListDataReport = GetChiTietDonThu(DetailsReportPayload?.CapID,DetailsReportPayload?.Index,DetailsReportPayload?.CoQuanID,'get',PageNumber)\r\n                        console.log(ListDataReport,'ListDataReport')\r\n                    }\r\n                },\r\n                {\r\n                    passive: true\r\n                }\r\n            );\r\n        }\r\n    },[Step])\r\n\r\n    const formatListTree = (list, Cap = 0) => {\r\n        if(list){\r\n            Cap++\r\n            list.forEach((item, index) => {\r\n                if (item.DataChild) {\r\n                    item.Cap = Cap\r\n                } else {\r\n                    item.Cap = Cap\r\n                }\r\n                if (index === list.length - 1) {\r\n                    const findChilds = list.filter(item => item.DataChild)\r\n                    // Cap++\r\n                    findChilds.forEach(item => {\r\n                        formatListTree(item.DataChild, Cap)\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleRenderHeaderTreeV2 = () => {\r\n        console.log('render table header')\r\n        const propsThead = {\r\n            Name: '',\r\n            props: {\r\n                className: '',\r\n                children: []\r\n            }\r\n        }\r\n        const mapTree = (list, itemParent) => {\r\n           if(list){\r\n            list.map(item => {\r\n                if (item.DataChild) {\r\n                    const propsTH = {\r\n                        Name: '',\r\n                        props: {\r\n                        },\r\n                        propsChild: []\r\n                    }\r\n                    const propsTR = {\r\n                        Name: '',\r\n                        props: {\r\n                        },\r\n                        propsChild: []\r\n                    }\r\n                    if (!item.DataChild) {\r\n                        propsTH.props.rowSpan = 0\r\n                    }\r\n                    propsTR.props.id = itemParent?.Cap\r\n                    propsTH.props.id = item.ID\r\n\r\n                    //   console.log(item.Style)\r\n                    //   propsTH.props = {...propsTH.props}\r\n                    let findGroupParent\r\n                    // get group parent of current item\r\n                    const getGroupParent = (listITem, Cap) => {\r\n                        listITem.forEach(item => {\r\n                            if (item.props.propsChild && item.props.propsChild.length > 0) {\r\n                                if (String(item.props.id) === String(Cap)) {\r\n                                    findGroupParent = item\r\n                                } else {\r\n                                    getGroupParent(item.props.propsChild, Cap?.toString())\r\n                                }\r\n                            } else {\r\n                                if (String(item.props.id) === String(Cap)) {\r\n                                    findGroupParent = item\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    getGroupParent(propsThead.props.children ? propsThead.props.children : [], itemParent?.Cap)\r\n\r\n                    propsTH.props.className = \"parent__group\"\r\n                    // caculator colspan for each item\r\n                    const getItemColspan = (list, itemFind) => {\r\n                        let initColspan = 0\r\n                        const getMaxColSpan = (list, itemFind, maxLengthS = 0) => {\r\n                            if (itemFind) {\r\n                                list.map(item => {\r\n                                    if (item.ID === itemFind.ID) {\r\n                                        if (item.DataChild) {\r\n                                            getMaxColSpan(item.DataChild, null)\r\n                                        } else {\r\n                                        }\r\n                                    } else if (item.DataChild && item.ID !== itemFind.ID) {\r\n                                        getMaxColSpan(item.DataChild, itemFind)\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                list.map(item => {\r\n                                    if (item.DataChild) {\r\n                                        getMaxColSpan(item.DataChild, null, initColspan)\r\n                                    } else {\r\n                                        initColspan += 1\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                        getMaxColSpan(list, itemFind)\r\n                        return initColspan\r\n                    }\r\n\r\n                    propsTH.props.colSpan = getItemColspan(list, item)\r\n                    propsTH.Name = item.Name\r\n                    const th = React.createElement('th', { ...propsTH.props }, [propsTH.Name])\r\n                    const tr = React.createElement('tr', { ...propsTR.props }, [th],)\r\n                    if (findGroupParent) {\r\n                        let isContains = false\r\n                        const arrChilds = findGroupParent.props.children\r\n                        if (arrChilds) {\r\n                            for (let i = 0; i < arrChilds.length; i++) {\r\n                                if (Number(arrChilds[i].props?.id) === Number(item.ID)) {\r\n                                    isContains = true\r\n                                }\r\n                            }\r\n                        }\r\n                        // check if group parent not include item \r\n                        if (!isContains) {\r\n                            findGroupParent.props.children.push(th)\r\n                        }\r\n                    } else {\r\n                        // if not have group parent then push item to rootable\r\n                        propsThead.props.children.push(tr)\r\n                    }\r\n                    mapTree(item.DataChild ? item.DataChild : [], item)\r\n\r\n                } else {\r\n                    const propsTH = {\r\n                        Name: '',\r\n                        props: {\r\n\r\n                        },\r\n                        propsChild: [],\r\n                        style: ''\r\n                    }\r\n                    const propsTR = {\r\n                        Name: '',\r\n                        props: {\r\n\r\n                        },\r\n                        propsChild: []\r\n                    }\r\n                    // const arrStyle = item.Style ? item.Style.toString().split(';') : []\r\n                    // arrStyle.forEach(style => {\r\n                    //     if (style !== '' && style) {\r\n                    //         const propertys = style.split(':')[0]\r\n                    //         const value = style.split(':')[1]\r\n                    //         propsTH.props[propertys] = value\r\n                    //     }\r\n                    // })\r\n                    propsTH.Name = item.Name\r\n                    // propsTH.style = item?.Style\r\n                    propsTR.props.id = itemParent?.Cap ? itemParent?.Cap : 0\r\n                    propsTH.props.id = item.ID\r\n                    if (!item.DataChild) {\r\n                        propsTH.props.rowSpan = 0\r\n                    }\r\n                    propsTR.id = itemParent?.Cap ? itemParent?.Cap : 0\r\n                    let findGroupParent\r\n                    // get group parent of current item\r\n\r\n                    const getGroupParent = (listITem, Cap) => {\r\n                        listITem.forEach(item => {\r\n                            if (item.props.propsChild && item.props.propsChild.length > 0) {\r\n                                if (String(item.props.id) === String(Cap)) {\r\n                                    findGroupParent = item\r\n                                } else {\r\n                                    getGroupParent(item.props.propsChild, Cap?.toString())\r\n                                }\r\n                            } else {\r\n                                if (String(item.props.id) === String(Cap)) {\r\n                                    findGroupParent = item\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    getGroupParent(propsThead.props.children, itemParent?.Cap)\r\n                    const th = React.createElement('th', { ...propsTH.props }, [propsTH.Name])\r\n                    const tr = React.createElement('tr', { ...propsTR.props }, [th])\r\n\r\n                    if (findGroupParent) {\r\n                        let isContains = false\r\n                        const arrChilds = findGroupParent.props.children\r\n\r\n\r\n                        if (arrChilds) {\r\n                            for (let i = 0; i < arrChilds.length; i++) {\r\n                                if (Number(arrChilds[i].props?.id) === Number(item.ID)) {\r\n                                    isContains = true\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!isContains) {\r\n                            findGroupParent.props.children.push(th)\r\n                        }\r\n                    } else {\r\n                        propsThead.props.children.push(tr)\r\n                    }\r\n                }\r\n            })\r\n           }\r\n        }\r\n        formatListTree(tableHeader)\r\n        mapTree(tableHeader)\r\n        const thead = React.createElement('thead', null, [...propsThead.props.children])\r\n        return thead\r\n    }\r\n\r\n    const beforeRenderTableData = () => {\r\n        const rootTbody = {\r\n            Name: '',\r\n            props: {\r\n                className: '',\r\n                children: [],\r\n                id: 'rootTbody'\r\n            }\r\n        }\r\n        handleRenderBodyTable(rootTbody, tableData, tableData)\r\n        const tbody = React.createElement('tbody', { ...rootTbody.props }, [...rootTbody.props.children])\r\n        return tbody\r\n    }\r\n\r\n    const handleRemoveActiveCurrent = (item, rootTbody, list) => {\r\n        // get all item from DOM have same parent active\r\n        const getIdDataChilds = document.querySelectorAll(`[data-id__parent=\"${item.ParentID}\"]`);\r\n        const listTotalCHild = [...rootTbody.children]\r\n        Array.isArray(listTotalCHild)\r\n        const listIdChilds = []\r\n        const FindChilds = list => {\r\n            list.forEach(item => {\r\n                if (item.DataChild) {\r\n                    if (!listIdChilds.includes(item.ID)) {\r\n                        listIdChilds.push(item.ID)\r\n                    }\r\n                    FindChilds(item.DataChild)\r\n                } else {\r\n                    if (!listIdChilds.includes(item.ID)) {\r\n                        listIdChilds.push(item.ID)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        const listArrFirstChild = []\r\n        // loop for each item child\r\n        for (let i = 0; i < getIdDataChilds.length; i++) {\r\n            // Find item from original data based on data get from DOM\r\n            const findChildsData = (list, idChild) => {\r\n                list.forEach(item => {\r\n                    if (item.DataChild) {\r\n                        if (Number(item.ID) === Number(idChild)) {\r\n                            if (!listArrFirstChild.includes(Number(item))) {\r\n                                listArrFirstChild.push(item)\r\n                            }\r\n                        } else {\r\n                            findChildsData(item.DataChild, idChild)\r\n                        }\r\n                    } else {\r\n                        if (Number(item.ID) === Number(idChild)) {\r\n                            if (!listArrFirstChild.includes(Number(item))) {\r\n                                listArrFirstChild.push(item)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            findChildsData(list, getIdDataChilds[i].getAttribute('id-child'))\r\n\r\n            // Take item ID of each item listArrFirstChild\r\n            FindChilds(listArrFirstChild)\r\n\r\n\r\n            const listElementFromIdChilds = []\r\n            // get all element child based on list ID child above\r\n            listIdChilds.forEach(ID => {\r\n                const getIdChildsEle = document.querySelectorAll(`[id-child=\"${ID}\"]`)\r\n                if (getIdChildsEle) {\r\n                    listElementFromIdChilds.push(...getIdChildsEle)\r\n                }\r\n            })\r\n            // loop for each item child to remove all attribute and hidden it\r\n            listElementFromIdChilds.forEach(item => {\r\n                const id = item.getAttribute('id-child')\r\n                item.classList.remove(`active${id}`)\r\n                item.setAttribute('data-id__parent', null)\r\n                item.classList.add('disabled-rowItem')\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleRenderChildActive = (item, list, rootTbody, listOrign) => {\r\n        const activeParent = document.getElementsByClassName(`active${item.ParentID}`)\r\n        const listTotalCHild = [...rootTbody.children]\r\n        const obj = listTotalCHild.filter(itemFilter => Number(itemFilter.getAttribute('data-id')) === Number(item.ParentID))[0]\r\n        let parent\r\n        //  loop find item parent based on parentID\r\n        findParentArray(listOrign, item.ParentID, parent)\r\n        // const indexParent = docu\r\n        let positionChildAt = parent?.DataChild?.indexOf(item) + 1\r\n        // find position of child in parent\r\n        if (activeParent.length) {\r\n            const ele = document.querySelectorAll(`[id-child=\"${item.ID}\"]`)\r\n            if (ele.length) {\r\n                const newArrConstainsEleHave = [...ele]\r\n                Array.isArray(newArrConstainsEleHave)\r\n                newArrConstainsEleHave.forEach(itemConstains => {\r\n                    itemConstains.setAttribute('data-id__parent', item.ParentID)\r\n                    itemConstains.classList.remove('disabled-rowItem')\r\n                })\r\n            } else {\r\n                const tr = document.createElement('tr')\r\n                item.DataArr.forEach((itemData, indexData) => {\r\n                    const td = document.createElement('td')\r\n                    td.id = itemData.ID\r\n                    td.classList.add('item-rows')\r\n                    let inputEdit\r\n                    if (!itemData?.isEdit) {\r\n                        inputEdit = document.createElement('p')\r\n                        inputEdit.textContent = item.Content !== \"0\" ? item.Content : ''\r\n                    } else {\r\n                        inputEdit = document.createElement('input')\r\n                        inputEdit.defaultValue = itemData.Content !== \"0\" ? itemData.Content : ''\r\n                        inputEdit.disabled = !item?.isEdit\r\n                        inputEdit.value = itemData.Content !== \"0\" ? itemData.Content : ''\r\n                    }\r\n                    inputEdit.style.cssText = itemData?.Style\r\n                    td.appendChild(inputEdit)\r\n                    tr.appendChild(td)\r\n                    // handle clicked in td is first child\r\n\r\n                    if (indexData === 0) {\r\n                        td.onclick = () => {\r\n                            console.log('clicked first item')\r\n                            if (item.DataChild) {\r\n                                tr.classList.toggle(`active${item.ID}`)\r\n                                handleLoopListChidRows(item.DataChild, item, rootTbody, listOrign)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                tr.setAttribute('id-child', item.ID)\r\n                tr.setAttribute('data-id', item.ID)\r\n                tr.setAttribute('data-id__parent', item.ParentID)\r\n                const arr = [...rootTbody.children]\r\n                Array.isArray(arr)\r\n                if (parent && parent.ID) {\r\n                    const arrChildsTbody = [...rootTbody.children]\r\n                    for (let i = 0; i < arrChildsTbody.length; i++) {\r\n                        if (Number(arrChildsTbody[i].getAttribute('data-id')) === parent.ID) {\r\n                            positionChildAt += i\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n                rootTbody.insertBefore(tr, rootTbody.children[positionChildAt]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const findParentArray = (list, ParentID, parent) => {\r\n        list.forEach(item => {\r\n            if (item.DataChild) {\r\n                if (item.ID === ParentID) {\r\n                    parent = item\r\n                } else {\r\n                    findParentArray(item.DataChild, ParentID)\r\n                }\r\n            } else {\r\n                if (item.ID === ParentID) {\r\n                    parent = item\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRenderActiveNotChild = (item, list, rootTbody, listOrign, activeParent) => {\r\n        // select all item\r\n        const ele = document.querySelectorAll(`[data-id=\"${item.ID}\"]`)\r\n        let parent\r\n        // find parent of current item \r\n        findParentArray(listOrign, item.ParentID, parent)\r\n        // find position of item in list child of parent\r\n        let positionChildAt = parent?.DataChild?.indexOf(item) + 1\r\n        if (activeParent.length) {\r\n            if (ele.length) {\r\n                const newArrConstainsEleHave = [...ele]\r\n                Array.isArray(newArrConstainsEleHave)\r\n                // loop all item and remove disabled \r\n                newArrConstainsEleHave.forEach(itemConstains => {\r\n                    itemConstains.setAttribute('data-id__parent', item.ParentID)\r\n                    itemConstains.classList.remove('disabled-rowItem')\r\n                })\r\n            } else {\r\n                // if DOM not have item, declare new item\r\n                const tr = document.createElement('tr')\r\n                item.DataArr.forEach(itemTD => {\r\n                    // create id tag for each item in dataArr\r\n                    const td = document.createElement('td')\r\n                    // create inputEdit for each td\r\n                    let inputEdit\r\n                    console.log(itemTD, 'itemTD')\r\n                    if (!itemTD?.isEdit) {\r\n                        inputEdit = document.createElement('p')\r\n                        inputEdit.textContent = item.Content !== \"0\" ? item.Content : ''\r\n                    } else {\r\n                        inputEdit = document.createElement('input')\r\n                        inputEdit.defaultValue = itemTD.Content ? itemTD.Content : ''\r\n                        inputEdit.disabled = !itemTD.isEdit\r\n                    }\r\n                    inputEdit.style.cssText = itemTD?.Style\r\n                    // push input to td\r\n                    td.appendChild(inputEdit)\r\n                    // push td to tr\r\n                    tr.appendChild(td)\r\n                })\r\n                tr.setAttribute('id-child', item.ID)\r\n                tr.setAttribute('data-id', item.ID)\r\n                tr.setAttribute('data-id__parent', item.ParentID)\r\n                // create arr is array constains all child of tbody\r\n                const arr = [...rootTbody.children]\r\n                Array.isArray(arr)\r\n                if (parent && parent.ID) {\r\n                    const arrChildsTbody = [...rootTbody.children]\r\n                    // loop for each child of array and find parent of current item\r\n                    for (let i = 0; i < arrChildsTbody.length; i++) {\r\n                        if (Number(arrChildsTbody[i].getAttribute('data-id')) === parent.ID) {\r\n                            positionChildAt += i\r\n                        }\r\n                    }\r\n                }\r\n                // insert tr to rootTbody\r\n                rootTbody.insertBefore(tr, rootTbody.children[positionChildAt]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleLoopListChidRows = (list = [], itemParents, rootTbody, listOrign) => {\r\n        list.forEach(item => {\r\n            const activeParent = document.getElementsByClassName(`active${item.ParentID}`)\r\n            if (!activeParent.length) {\r\n                // handle remove active item current and hidden child of current item\r\n                handleRemoveActiveCurrent(item, rootTbody, list)\r\n            } else if (item?.DataChild?.length > 0 && activeParent.length) {\r\n                handleRenderChildActive(item, list, rootTbody, listOrign)\r\n            } else if (!item?.DataChild && activeParent.length) {\r\n                handleRenderActiveNotChild(item, list, rootTbody, listOrign, activeParent, rootTbody)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRenderBodyTable = (rootTbody, list = [], listOrign) => {\r\n        list.forEach((itemRows) => {\r\n            // create trProps for each item\r\n            const trProps = {\r\n                Name: '',\r\n                props: {\r\n                    className: '',\r\n                    children: []\r\n                }\r\n            }\r\n            if (itemRows.DataArr) {\r\n                itemRows.DataArr.forEach((item, index) => {\r\n                    /// handle on each frist rows \r\n                    if (index === 0) {\r\n                        // create th props\r\n                        const thProps = {\r\n                            Name: '',\r\n                            props: {\r\n                                className: '',\r\n                                children: []\r\n                            }\r\n                        }\r\n                        // create input props\r\n                        let inputEditProps = {\r\n                            Name: '',\r\n                            props: {\r\n                                className: '',\r\n                            }\r\n                        }\r\n                       \r\n                        if (!item?.isEdit) {\r\n                            inputEditProps.props.textContent = item.Content !== \"0\" ? item.Content : ''\r\n                        } else {\r\n                            inputEditProps.props.defaultValue = item.Content !== \"0\" ? item.Content : ''\r\n                            inputEditProps.props.disabled = !item?.isEdit\r\n                        }\r\n                        // check item have edit or not to render html tag\r\n                        //   inputEditProps.props.style = item?.Style\r\n                        const inputEdit = !item?.isEdit ? React.createElement('p', { ...inputEditProps.props }, inputEditProps.props?.textContent) : React.createElement('input', { ...inputEditProps.props })\r\n                        // push input is children to html th tags\r\n                        thProps.props.children.push(inputEdit)\r\n                        thProps.props.id = item.ID\r\n                        thProps.props.className += 'item-row'\r\n                        thProps.props['data-id'] = itemRows.ID\r\n                        //   tr.setAttribute('data-id',itemRows.ID)\r\n                        const itemParent = list.filter(item => item.ID === itemRows.ID)\r\n                        const listChild = itemParent[0]?.DataChild\r\n                        // handle click to show more child\r\n                        const handleRenderListChild = () => {\r\n                            console.log('clicked th')\r\n                            const rootTbody = document.getElementById('rootTbody')\r\n                            // find parent of current item\r\n                            const findParent = list.filter(items => items.DataArr.includes(item))\r\n                            // find parent tag from parent id\r\n                            const findParentElement = document.querySelectorAll(`[data-id=\"${findParent[0].ID}\"]`)[0];\r\n                            findParentElement.classList.toggle(`active${findParent[0]?.ID}`)\r\n                            /// toggle class active when item clicked and show children of item \r\n                            if (listChild) {\r\n                                handleLoopListChidRows(listChild, tr, rootTbody, listOrign)\r\n                            } else {\r\n                                message.destroy()\r\n                                message.warning('Không có dữ liệu')\r\n                            }\r\n                        }\r\n                        // assign event onClick to th\r\n                        thProps.props.onClick = () => handleRenderListChild()\r\n                        // decrale th\r\n                        const th = React.createElement('td', { ...thProps.props }, [...thProps.props.children])\r\n                        // push th tag to tr\r\n                        trProps.props.children.push(th)\r\n                    } else {\r\n                        // create th props and set attribute for input\r\n                        const propsTH = {\r\n                            Name: '',\r\n                            props: {\r\n                                className: '',\r\n                                children: []\r\n                            }\r\n                        }\r\n                        // create input props and set attribute for input\r\n                        let inputEditProps = {\r\n                            Name: '',\r\n                            props: {\r\n                                className: '',\r\n                            }\r\n                        }\r\n\r\n                        if (!item?.isEdit) {\r\n                            inputEditProps.props.textContent = item.Content !== \"0\" ? item.Content : ''\r\n                        } else {\r\n                            // inputEditProps.props.defaultValue = item.Content !== \"0\" ? item.Content : ''\r\n                            inputEditProps.props.disabled = !item.isEdit\r\n                        }\r\n                        // inputEditProps.props.style = item?.Style\r\n                        // inputEditProps.props?.textContent\r\n                        propsTH.props.id = item.ID\r\n                        // declare input from input props\r\n                        const inputEdit = !item?.isEdit ? React.createElement('p', { ...inputEditProps.props }, <p dangerouslySetInnerHTML={{ __html: inputEditProps.props?.textContent\r\n                         }}></p>) : React.createElement('input', { ...inputEditProps.props })\r\n                        // push input is children to th\r\n                        propsTH.props.children.push(inputEdit)\r\n                        propsTH.props.className = 'item-rows'\r\n                        // declare th tag from th props\r\n                        // CapID,Index,CoQuanID\r\n                        propsTH.props.onClick = () => {\r\n                            GetChiTietDonThu(item.CapID,index,item.CoQuanID,'set')\r\n                            setStep(2)\r\n                        }\r\n                        const th = React.createElement('td', { ...propsTH.props }, [...propsTH.props.children])\r\n                        // push th tag to tr\r\n                        trProps.props.children.push(th)\r\n                    }\r\n                })\r\n            }\r\n            trProps.props.className += 'trHover'\r\n            // declare tr and push to tbody\r\n            const tr = React.createElement('tr', { ...trProps.props }, [...trProps.props.children])\r\n            rootTbody.props.children.push(tr)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    console.log(Step === 1 && loading)\r\n     \r\n    // const caculatorWidthEachRowsTable = tableData.length > 15 ? ` ${tableData.length * 30}px` : 'auto'\r\n    return <PageWrapper >\r\n        <div className=\"wrapper__table\" id = \"wrapper__table\">\r\n            {Step === 1 ? loadingDetailsReport ?  <div className=\"wrapperLoading\">\r\n                    <Spin size=\"large\"/> \r\n                </div>:  <>\r\n                <table id = \"table\">\r\n                    {handleRenderHeaderTreeV2(tableHeader)}\r\n                    {beforeRenderTableData()}\r\n                </table>\r\n                </> \r\n            : null\r\n            }\r\n            {Step === 2 ? loadingDetailsReport ? <div className=\"wrapperLoading\">\r\n                    <Spin size=\"large\"/> \r\n                </div> :  <>\r\n                <table id = \"table\">\r\n                    {handleRenderHeaderTreeV2(tableHeader)}\r\n                    {beforeRenderTableData()}\r\n                </table>\r\n                <button onClick={() => onRollBack()}><RollbackOutlined/></button>\r\n            </> \r\n            : null\r\n            }\r\n        </div>\r\n    </PageWrapper>\r\n\r\n}\r\n\r\n\r\nexport { Table }","import React, {useEffect, useState} from 'react';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport BoxTable from '../../../../components/utility/boxTable';\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport PageAction from \"../../../../components/utility/pageAction\";\r\nimport Box from \"../../../../components/utility/box\";\r\nimport BoxFilter from \"../../../../components/utility/boxFilter\";\r\nimport {DatePicker, message, Modal, Tooltip} from 'antd';\r\nimport {Button, InputSearch,Select,Option} from '../../../../components/uielements/exportComponent';\r\nimport {Table} from './table'\r\nimport {\r\n  changeUrlFilter,\r\n  getFilterData,\r\n  getDefaultPageSize,\r\n  getRoleByKey, getConfigLocal\r\n} from \"../../../../helpers/utility\";\r\nimport {\r\n  UserAddOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  ReloadOutlined,\r\n  UsergroupAddOutlined\r\n} from \"@ant-design/icons\";\r\nimport {useVisible} from \"../../../CustomHook/useVisible\";\r\nimport {useKey} from \"../../../CustomHook/useKey\";\r\n\r\nconst Report = ({\r\n  title = \"Báo cáo something\",data,danhSachDonVi = [],location,tableHeader = [],tableLoading,setThongTinBaoCaoChiTiet,\r\n  ThongTinBaoCao,ChiTietDonThu,ThongTinBaoCaoChiTiet,GetChiTietDonThu,loadingDetailsReport,Step,setStep,onRollBack,\r\n  DetailsReportPayload\r\n}) => {\r\n  // document.title = 'Quản lý học sinh';\r\n  const [filterData, setFilterData] = useState({});\r\n  const [DetailsDataReport,setDetailsDataReport] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [ThongTinBaoCaoChiTiet]);\r\n\r\n  const mapsToProps = {\r\n    tableHeader : Step === 1 ? ThongTinBaoCao?.DataTable?.TableHeader : Step === 2 ? ThongTinBaoCaoChiTiet?.DataTable?.TableHeader : {},\r\n    tableData :  Step === 1 ? ThongTinBaoCao?.DataTable?.TableData : Step === 2 ? ThongTinBaoCaoChiTiet?.DataTable?.TableData : [],\r\n    setThongTinBaoCaoChiTiet,\r\n    loadingDetailsReport,\r\n    DetailsReportPayload,\r\n    GetChiTietDonThu,\r\n    tableLoading,\r\n    ChiTietDonThu,\r\n    setStep,\r\n    Step,\r\n    onRollBack\r\n  }\r\n\r\n  \r\n  return <>\r\n      <Table {...mapsToProps} />\r\n  </>\r\n  \r\n}\r\n\r\nexport default Report","// This icon file is generated automatically.\nvar RollbackOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M793 242H366v-74c0-6.7-7.7-10.4-12.9-6.3l-142 112a8 8 0 000 12.6l142 112c5.2 4.1 12.9.4 12.9-6.3v-74h415v470H175c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h618c35.3 0 64-28.7 64-64V306c0-35.3-28.7-64-64-64z\" } }] }, \"name\": \"rollback\", \"theme\": \"outlined\" };\nexport default RollbackOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RollbackOutlinedSvg from \"@ant-design/icons-svg/es/asn/RollbackOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar RollbackOutlined = function RollbackOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RollbackOutlinedSvg\n  }));\n};\nRollbackOutlined.displayName = 'RollbackOutlined';\nexport default /*#__PURE__*/React.forwardRef(RollbackOutlined);"],"names":["WDComponentDivAction","styled","ComponentDivAction","WithDirection","props","children","useKey","useState","modalKey","setModalKey","TableWidth","Table","tableHeader","tableData","setStep","ChiTietDonThu","Step","GetChiTietDonThu","loading","setThongTinBaoCaoChiTiet","loadingDetailsReport","onRollBack","DetailsReportPayload","useRef","useEffect","table","document","getElementById","PageNumber","console","log","addEventListener","Math","abs","scrollHeight","clientHeight","scrollTop","ListDataReport","CapID","Index","CoQuanID","passive","formatListTree","list","Cap","forEach","item","index","DataChild","length","findChilds","filter","handleRenderHeaderTreeV2","propsThead","Name","className","mapTree","itemParent","map","findGroupParent","propsTH","propsChild","propsTR","rowSpan","id","ID","getGroupParent","listITem","String","toString","colSpan","itemFind","initColspan","getMaxColSpan","getItemColspan","th","React","tr","isContains","arrChilds","i","Number","push","style","beforeRenderTableData","rootTbody","handleRenderBodyTable","handleRemoveActiveCurrent","getIdDataChilds","querySelectorAll","ParentID","listTotalCHild","Array","isArray","listIdChilds","FindChilds","includes","listArrFirstChild","findChildsData","idChild","getAttribute","listElementFromIdChilds","getIdChildsEle","classList","remove","setAttribute","add","handleRenderChildActive","listOrign","parent","activeParent","getElementsByClassName","itemFilter","findParentArray","positionChildAt","ele","newArrConstainsEleHave","itemConstains","createElement","DataArr","itemData","indexData","inputEdit","td","isEdit","defaultValue","Content","disabled","value","textContent","cssText","Style","appendChild","onclick","toggle","handleLoopListChidRows","arr","insertBefore","handleRenderActiveNotChild","itemTD","itemRows","trProps","thProps","inputEditProps","listChild","onClick","findParent","items","message","handleRenderListChild","dangerouslySetInnerHTML","__html","size","RollbackOutlined","title","data","danhSachDonVi","location","tableLoading","ThongTinBaoCao","ThongTinBaoCaoChiTiet","mapsToProps","DataTable","TableHeader","TableData","ref","AntdIcon","_objectSpread","icon","RollbackOutlinedSvg","displayName"],"sourceRoot":""}